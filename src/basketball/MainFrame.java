/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basketball;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author robpo
 */
public class MainFrame extends javax.swing.JFrame {

    private Team playerTeam;
    private int viewRosterPageNumber;
    private int resignPageNumber;
    private int viewDraftPageNumber;
    private int viewFreeAgentsPageNumber;
    private int viewTrainingPageNumber;
    private int viewYearlyStatsPageNumber;
    private NewPlayerCreator pc = new NewPlayerCreator();
    private League league;
    
    private JPanel prevPanel;
    private JPanel prevBeforeEntireRosterPanel;
    
    private int currentDraftPick;
    private boolean isUserPickingInDraft;
    private ArrayList<DraftPick> draftPicks;
    
    private int currentFreeAgencyPick;
    private boolean isUserPickingInFreeAgency;
    private int currentFreeAgencyDay;
    
    private int playerTeamPlayoffWins;
    private int enemyTeamPlayoffWins;
    
    private Player trainingPlayer;
    private Player yearlyStatsPlayer;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        
        this.setResizable(false);
        this.setTitle("DBA Manager 2");
        
        viewRosterPageNumber = 0;
        resignPageNumber = 0;
        viewDraftPageNumber = 0;
        currentDraftPick = 0;
        currentFreeAgencyPick = 0;
        currentFreeAgencyDay = 1;
        viewFreeAgentsPageNumber = 0;
        viewTrainingPageNumber = 0;
        viewYearlyStatsPageNumber = 0;
        isUserPickingInDraft = false;
        isUserPickingInFreeAgency = false;
        
        playerTeam = new Team();
        
        playerTeamPlayoffWins = 0;
        enemyTeamPlayoffWins = 0;
        
        TeamCreator tc = new TeamCreator();
        playerTeam = tc.generateRandomTeam();
        playerTeam.autoSortLineups();
        playerTeam.setName("The Commandos");
        
        league = new League();
        league.getTeams().add(playerTeam);
        league.generateSchedule();
        
        draftPicks = new ArrayList<>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jButton41 = new javax.swing.JButton();
        viewPlayersPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        playerDetailsPanel = new javax.swing.JPanel();
        jButton40 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jButton104 = new javax.swing.JButton();
        seasonStandingsPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jButton42 = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        playoffResultsPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jButton44 = new javax.swing.JButton();
        resignPlayersPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jButton106 = new javax.swing.JButton();
        draftPanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jButton63 = new javax.swing.JButton();
        jButton64 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jButton65 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jButton108 = new javax.swing.JButton();
        draftSummaryPanel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jButton72 = new javax.swing.JButton();
        freeAgencyPanel = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jButton73 = new javax.swing.JButton();
        jButton74 = new javax.swing.JButton();
        jButton75 = new javax.swing.JButton();
        jButton76 = new javax.swing.JButton();
        jButton77 = new javax.swing.JButton();
        jButton78 = new javax.swing.JButton();
        jButton79 = new javax.swing.JButton();
        jButton80 = new javax.swing.JButton();
        jButton81 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jButton107 = new javax.swing.JButton();
        trainingPanel = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jButton83 = new javax.swing.JButton();
        jButton84 = new javax.swing.JButton();
        jButton85 = new javax.swing.JButton();
        jButton86 = new javax.swing.JButton();
        jButton87 = new javax.swing.JButton();
        jButton88 = new javax.swing.JButton();
        jButton89 = new javax.swing.JButton();
        jButton90 = new javax.swing.JButton();
        jButton91 = new javax.swing.JButton();
        gamePanel = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jButton43 = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        drillSelectorPanel = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jButton92 = new javax.swing.JButton();
        jButton93 = new javax.swing.JButton();
        jButton94 = new javax.swing.JButton();
        jButton95 = new javax.swing.JButton();
        jButton96 = new javax.swing.JButton();
        jButton97 = new javax.swing.JButton();
        jButton98 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jButton99 = new javax.swing.JButton();
        viewEntireRosterPanel = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jButton105 = new javax.swing.JButton();
        trainingResultsPanel = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jButton100 = new javax.swing.JButton();
        yearlyStatsPanel = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jButton101 = new javax.swing.JButton();
        jButton102 = new javax.swing.JButton();
        jButton103 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        mainPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jButton19.setText("View roster");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel17.setText("Season");

        jButton41.setText("Sim season");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(443, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton41)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(453, 453, 453))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                            .addComponent(jButton19)
                            .addGap(420, 420, 420)))))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton41)
                .addGap(51, 51, 51)
                .addComponent(jButton19)
                .addContainerGap(284, Short.MAX_VALUE))
        );

        getContentPane().add(mainPanel, "card2");

        viewPlayersPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel1");

        jLabel3.setText("jLabel1");

        jLabel4.setText("jLabel1");

        jLabel5.setText("jLabel1");

        jLabel6.setText("jLabel1");

        jLabel7.setText("jLabel1");

        jLabel8.setText("jLabel1");

        jLabel9.setText("jLabel1");

        jLabel10.setText("jLabel1");

        jLabel11.setText("jLabel1");

        jLabel12.setText("jLabel1");

        jLabel13.setText("jLabel1");

        jLabel14.setText("jLabel1");

        jLabel15.setText("jLabel1");

        jButton1.setText("Add to subs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add to starters");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Add to starters");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Add to subs");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Details");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Add to starters");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Add to subs");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Details");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Add to starters");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Add to subs");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Details");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Add to starters");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Add to subs");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Details");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Next page");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Prev page");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Main menu");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton20.setText("X");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Details");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("X");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Details");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("X");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("Details");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setText("X");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("Details");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("X");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("Details");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("X");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("Details");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setText("X");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setText("Details");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText("X");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton35.setText("Details");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("X");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton37.setText("Details");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jButton38.setText("X");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton39.setText("Details");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewPlayersPanelLayout = new javax.swing.GroupLayout(viewPlayersPanel);
        viewPlayersPanel.setLayout(viewPlayersPanelLayout);
        viewPlayersPanelLayout.setHorizontalGroup(
            viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPlayersPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton17)
                .addGap(10, 10, 10)
                .addComponent(jButton18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16)
                .addGap(65, 65, 65))
            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton15))
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                        .addComponent(jButton38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton39)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton23)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton24)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton25)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton26)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton27)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton28)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton29))
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton36)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton37)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton34)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton35)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton32)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton33)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                                .addComponent(jButton30)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton31))
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(53, 53, 53)
                                        .addComponent(jButton4)))
                                .addGap(60, 60, 60)
                                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7))
                                .addGap(61, 61, 61)
                                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton10))
                                .addGap(62, 62, 62)
                                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton13)))))
                    .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton21)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewPlayersPanelLayout.setVerticalGroup(
            viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPlayersPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton20)
                    .addComponent(jButton21)
                    .addComponent(jButton22)
                    .addComponent(jButton23)
                    .addComponent(jButton24)
                    .addComponent(jButton25)
                    .addComponent(jButton26)
                    .addComponent(jButton27)
                    .addComponent(jButton28)
                    .addComponent(jButton29))
                .addGap(18, 18, 18)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton38)
                        .addComponent(jButton39))
                    .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton36)
                        .addComponent(jButton37))
                    .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton34)
                        .addComponent(jButton35))
                    .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton32)
                        .addComponent(jButton33))
                    .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton30)
                        .addComponent(jButton31)))
                .addGap(18, 18, 18)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPlayersPanelLayout.createSequentialGroup()
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton5)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPlayersPanelLayout.createSequentialGroup()
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPlayersPanelLayout.createSequentialGroup()
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPlayersPanelLayout.createSequentialGroup()
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton6)
                    .addComponent(jButton9)
                    .addComponent(jButton12)
                    .addComponent(jButton15))
                .addGap(30, 30, 30)
                .addGroup(viewPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jButton17)
                    .addComponent(jButton18))
                .addGap(19, 19, 19))
        );

        getContentPane().add(viewPlayersPanel, "card3");

        playerDetailsPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jButton40.setText("Return");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jLabel16.setText("jLabel16");

        jLabel19.setText("jLabel19");

        jLabel42.setText("jLabel42");

        jButton104.setText("Stats");
        jButton104.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton104ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playerDetailsPanelLayout = new javax.swing.GroupLayout(playerDetailsPanel);
        playerDetailsPanel.setLayout(playerDetailsPanelLayout);
        playerDetailsPanelLayout.setHorizontalGroup(
            playerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerDetailsPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(playerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(playerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton104, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31))))
        );
        playerDetailsPanelLayout.setVerticalGroup(
            playerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerDetailsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(playerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(playerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton40))
                    .addGroup(playerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton104)
                .addContainerGap())
        );

        getContentPane().add(playerDetailsPanel, "card4");

        seasonStandingsPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel18.setText("jLabel18");

        jButton42.setText("Go to the playoffs");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jLabel43.setText("jLabel18");

        javax.swing.GroupLayout seasonStandingsPanelLayout = new javax.swing.GroupLayout(seasonStandingsPanel);
        seasonStandingsPanel.setLayout(seasonStandingsPanelLayout);
        seasonStandingsPanelLayout.setHorizontalGroup(
            seasonStandingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seasonStandingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jButton42)
                .addGap(57, 57, 57))
        );
        seasonStandingsPanelLayout.setVerticalGroup(
            seasonStandingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seasonStandingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seasonStandingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(seasonStandingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                        .addComponent(jButton42))
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(seasonStandingsPanel, "card5");

        playoffResultsPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel20.setText("jLabel20");

        jButton44.setText("FINISH THE SEASON");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playoffResultsPanelLayout = new javax.swing.GroupLayout(playoffResultsPanel);
        playoffResultsPanel.setLayout(playoffResultsPanelLayout);
        playoffResultsPanelLayout.setHorizontalGroup(
            playoffResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playoffResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(jButton44)
                .addGap(218, 218, 218))
        );
        playoffResultsPanelLayout.setVerticalGroup(
            playoffResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playoffResultsPanelLayout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jButton44)
                .addContainerGap(355, Short.MAX_VALUE))
            .addGroup(playoffResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(playoffResultsPanel, "card6");

        resignPlayersPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel21.setText("jLabel21");

        jLabel22.setText("jLabel21");

        jLabel23.setText("jLabel21");

        jLabel24.setText("jLabel21");

        jLabel25.setText("jLabel21");

        jButton45.setText("Next page");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton46.setText("Prev page");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton47.setText("FINISH");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jButton48.setText("Resign");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        jButton49.setText("Resign");
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });

        jButton50.setText("Resign");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });

        jButton51.setText("Resign");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        jButton52.setText("Resign");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        jButton53.setText("Details");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        jButton54.setText("Details");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        jButton55.setText("Details");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });

        jButton56.setText("Details");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });

        jButton57.setText("Details");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });

        jButton58.setText("DECLINE");
        jButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton58ActionPerformed(evt);
            }
        });

        jButton59.setText("DECLINE");
        jButton59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton59ActionPerformed(evt);
            }
        });

        jButton60.setText("DECLINE");
        jButton60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton60ActionPerformed(evt);
            }
        });

        jButton61.setText("DECLINE");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });

        jButton62.setText("DECLINE");
        jButton62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton62ActionPerformed(evt);
            }
        });

        jLabel26.setText("jLabel26");

        jButton106.setText("View roster");
        jButton106.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton106ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout resignPlayersPanelLayout = new javax.swing.GroupLayout(resignPlayersPanel);
        resignPlayersPanel.setLayout(resignPlayersPanelLayout);
        resignPlayersPanelLayout.setHorizontalGroup(
            resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton46)
                .addGap(18, 18, 18)
                .addComponent(jButton45)
                .addGap(94, 94, 94)
                .addComponent(jButton47)
                .addGap(48, 48, 48))
            .addGroup(resignPlayersPanelLayout.createSequentialGroup()
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resignPlayersPanelLayout.createSequentialGroup()
                        .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(resignPlayersPanelLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton106, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(40, 40, 40)
                        .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(resignPlayersPanelLayout.createSequentialGroup()
                                .addComponent(jButton52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton57))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createSequentialGroup()
                                .addComponent(jButton51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton56))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createSequentialGroup()
                                .addComponent(jButton50)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton55))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createSequentialGroup()
                                .addComponent(jButton49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton54))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resignPlayersPanelLayout.createSequentialGroup()
                                .addComponent(jButton48)
                                .addGap(30, 30, 30)
                                .addComponent(jButton53)))
                        .addGap(37, 37, 37)
                        .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton58)
                            .addComponent(jButton59)
                            .addComponent(jButton60)
                            .addComponent(jButton61)
                            .addComponent(jButton62)))
                    .addGroup(resignPlayersPanelLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        resignPlayersPanelLayout.setVerticalGroup(
            resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resignPlayersPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton48)
                    .addComponent(jButton53)
                    .addComponent(jButton58))
                .addGap(18, 18, 18)
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton49)
                    .addComponent(jButton54)
                    .addComponent(jButton59))
                .addGap(18, 18, 18)
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton50)
                    .addComponent(jButton55)
                    .addComponent(jButton60))
                .addGap(18, 18, 18)
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton51)
                    .addComponent(jButton56)
                    .addComponent(jButton61))
                .addGap(18, 18, 18)
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton52)
                    .addComponent(jButton57)
                    .addComponent(jButton62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(resignPlayersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton45)
                    .addComponent(jButton46)
                    .addComponent(jButton47)
                    .addComponent(jButton106))
                .addGap(54, 54, 54))
        );

        getContentPane().add(resignPlayersPanel, "card7");

        draftPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel27.setText("jLabel27");

        jButton63.setText("Draft");
        jButton63.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton63ActionPerformed(evt);
            }
        });

        jButton64.setText("Advance to user pick/end");
        jButton64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton64ActionPerformed(evt);
            }
        });

        jLabel28.setText("jLabel27");

        jButton65.setText("Draft");
        jButton65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton65ActionPerformed(evt);
            }
        });

        jLabel29.setText("jLabel27");

        jButton66.setText("Draft");
        jButton66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton66ActionPerformed(evt);
            }
        });

        jButton67.setText("Details");
        jButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton67ActionPerformed(evt);
            }
        });

        jButton68.setText("Details");
        jButton68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton68ActionPerformed(evt);
            }
        });

        jButton69.setText("Details");
        jButton69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton69ActionPerformed(evt);
            }
        });

        jButton70.setText("Next page");
        jButton70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton70ActionPerformed(evt);
            }
        });

        jButton71.setText("Prev page");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });

        jLabel30.setText("jLabel30");

        jButton108.setText("View roster");
        jButton108.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton108ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout draftPanelLayout = new javax.swing.GroupLayout(draftPanel);
        draftPanel.setLayout(draftPanelLayout);
        draftPanelLayout.setHorizontalGroup(
            draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(draftPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(draftPanelLayout.createSequentialGroup()
                        .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(draftPanelLayout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(jButton65, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton68, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(draftPanelLayout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(jButton63, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton67, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(draftPanelLayout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jButton66, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton69, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(draftPanelLayout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(jButton108)
                        .addGap(58, 58, 58)
                        .addComponent(jButton71)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton64)
                        .addGap(56, 56, 56))))
        );
        draftPanelLayout.setVerticalGroup(
            draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(draftPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton63)
                    .addComponent(jButton67))
                .addGap(40, 40, 40)
                .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton65)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton68))
                .addGap(40, 40, 40)
                .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton66)
                    .addComponent(jButton69))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(draftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton71)
                    .addComponent(jButton70)
                    .addComponent(jButton64)
                    .addComponent(jButton108))
                .addGap(62, 62, 62))
        );

        getContentPane().add(draftPanel, "card8");

        draftSummaryPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel31.setText("jLabel31");

        jButton72.setText("ADVANCE TO FREE AGENCY");
        jButton72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton72ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout draftSummaryPanelLayout = new javax.swing.GroupLayout(draftSummaryPanel);
        draftSummaryPanel.setLayout(draftSummaryPanelLayout);
        draftSummaryPanelLayout.setHorizontalGroup(
            draftSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(draftSummaryPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton72)
                .addGap(127, 127, 127))
        );
        draftSummaryPanelLayout.setVerticalGroup(
            draftSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(draftSummaryPanelLayout.createSequentialGroup()
                .addGroup(draftSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(draftSummaryPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(draftSummaryPanelLayout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jButton72)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(draftSummaryPanel, "card9");

        freeAgencyPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel32.setText("jLabel27");

        jLabel33.setText("jLabel27");

        jLabel34.setText("jLabel27");

        jButton73.setText("Sign");
        jButton73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton73ActionPerformed(evt);
            }
        });

        jButton74.setText("Sign");
        jButton74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton74ActionPerformed(evt);
            }
        });

        jButton75.setText("Sign");
        jButton75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton75ActionPerformed(evt);
            }
        });

        jButton76.setText("Details");
        jButton76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton76ActionPerformed(evt);
            }
        });

        jButton77.setText("Details");
        jButton77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton77ActionPerformed(evt);
            }
        });

        jButton78.setText("Details");
        jButton78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton78ActionPerformed(evt);
            }
        });

        jButton79.setText("Sim to next chance/day");
        jButton79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton79ActionPerformed(evt);
            }
        });

        jButton80.setText("Prev page");
        jButton80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton80ActionPerformed(evt);
            }
        });

        jButton81.setText("Next page");
        jButton81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton81ActionPerformed(evt);
            }
        });

        jLabel35.setText("Money available:                            ");

        jLabel36.setText("isUserPicking");

        jLabel37.setText("Day of FA");

        jButton107.setText("View roster");
        jButton107.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton107ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout freeAgencyPanelLayout = new javax.swing.GroupLayout(freeAgencyPanel);
        freeAgencyPanel.setLayout(freeAgencyPanelLayout);
        freeAgencyPanelLayout.setHorizontalGroup(
            freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(freeAgencyPanelLayout.createSequentialGroup()
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(freeAgencyPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButton107)
                        .addGap(63, 63, 63)
                        .addComponent(jButton80)
                        .addGap(32, 32, 32)
                        .addComponent(jButton81))
                    .addGroup(freeAgencyPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106))
            .addGroup(freeAgencyPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton79)
                    .addGroup(freeAgencyPanelLayout.createSequentialGroup()
                        .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton73, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jButton74, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton75, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton76, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton78, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        freeAgencyPanelLayout.setVerticalGroup(
            freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(freeAgencyPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37)
                .addGap(18, 18, 18)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton73)
                    .addComponent(jButton76))
                .addGap(40, 40, 40)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton74)
                    .addComponent(jButton77))
                .addGap(40, 40, 40)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton75)
                    .addComponent(jButton78))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(freeAgencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton79)
                    .addComponent(jButton80)
                    .addComponent(jButton81)
                    .addComponent(jButton107))
                .addGap(92, 92, 92))
        );

        getContentPane().add(freeAgencyPanel, "card10");

        trainingPanel.setPreferredSize(new java.awt.Dimension(955, 581));

        jLabel38.setText("Training points remaining - ");

        jLabel39.setText("jLabel27");

        jLabel40.setText("jLabel27");

        jLabel41.setText("jLabel27");

        jButton83.setText("Details");
        jButton83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton83ActionPerformed(evt);
            }
        });

        jButton84.setText("Details");
        jButton84.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton84ActionPerformed(evt);
            }
        });

        jButton85.setText("Details");
        jButton85.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton85ActionPerformed(evt);
            }
        });

        jButton86.setText("Train");
        jButton86.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton86ActionPerformed(evt);
            }
        });

        jButton87.setText("Train");
        jButton87.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton87ActionPerformed(evt);
            }
        });

        jButton88.setText("Train");
        jButton88.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton88ActionPerformed(evt);
            }
        });

        jButton89.setText("Next page");
        jButton89.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton89ActionPerformed(evt);
            }
        });

        jButton90.setText("Prev page");
        jButton90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton90ActionPerformed(evt);
            }
        });

        jButton91.setText("Finish training");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout trainingPanelLayout = new javax.swing.GroupLayout(trainingPanel);
        trainingPanel.setLayout(trainingPanelLayout);
        trainingPanelLayout.setHorizontalGroup(
            trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingPanelLayout.createSequentialGroup()
                .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(trainingPanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(trainingPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton83)
                            .addComponent(jButton84)
                            .addComponent(jButton85))
                        .addGap(58, 58, 58)
                        .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton88)
                            .addComponent(jButton87)
                            .addComponent(jButton86)))
                    .addGroup(trainingPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton91)
                        .addGap(118, 118, 118)
                        .addComponent(jButton90)
                        .addGap(48, 48, 48)
                        .addComponent(jButton89)))
                .addContainerGap(287, Short.MAX_VALUE))
        );
        trainingPanelLayout.setVerticalGroup(
            trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel38)
                .addGap(65, 65, 65)
                .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton83)
                    .addComponent(jButton86))
                .addGap(40, 40, 40)
                .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton84)
                    .addComponent(jButton87))
                .addGap(40, 40, 40)
                .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton85)
                    .addComponent(jButton88))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton89)
                    .addComponent(jButton90)
                    .addComponent(jButton91))
                .addGap(71, 71, 71))
        );

        getContentPane().add(trainingPanel, "card11");

        jLabel44.setText("jLabel44");

        jLabel45.setText("jLabel44");

        jButton43.setText("Simulate game");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jLabel46.setText("jLabel46");

        jLabel47.setText("jLabel47");

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGap(0, 194, Short.MAX_VALUE)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(jButton43)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47))
                .addGap(13, 13, 13)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton43)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        getContentPane().add(gamePanel, "card12");

        drillSelectorPanel.setPreferredSize(new java.awt.Dimension(933, 581));

        jLabel48.setText("Finisher    - Close Shooting + Driving");

        jLabel49.setText("Winger      - Mid Shooting + Dribbling");

        jLabel50.setText("Sniper       - Three Shooting");

        jLabel51.setText("Playmaker - Passing + Driving + Speed");

        jLabel52.setText("Lockdown Defender - Perimeter Defense + Speed");

        jLabel53.setText("Anchor - Interior Defense + Strength");

        jLabel54.setText("Glass Cleaner - Offensive + Defensive Rebounding");

        jButton92.setText("TRAIN");
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });

        jButton93.setText("TRAIN");
        jButton93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton93ActionPerformed(evt);
            }
        });

        jButton94.setText("TRAIN");
        jButton94.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton94ActionPerformed(evt);
            }
        });

        jButton95.setText("TRAIN");
        jButton95.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton95ActionPerformed(evt);
            }
        });

        jButton96.setText("TRAIN");
        jButton96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton96ActionPerformed(evt);
            }
        });

        jButton97.setText("TRAIN");
        jButton97.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton97ActionPerformed(evt);
            }
        });

        jButton98.setText("TRAIN");
        jButton98.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton98ActionPerformed(evt);
            }
        });

        jLabel55.setText("training this player");

        jButton99.setText("Return");
        jButton99.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton99ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout drillSelectorPanelLayout = new javax.swing.GroupLayout(drillSelectorPanel);
        drillSelectorPanel.setLayout(drillSelectorPanelLayout);
        drillSelectorPanelLayout.setHorizontalGroup(
            drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drillSelectorPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(drillSelectorPanelLayout.createSequentialGroup()
                        .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83)
                        .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton98)
                            .addComponent(jButton97)
                            .addComponent(jButton96)
                            .addComponent(jButton95)
                            .addComponent(jButton94)
                            .addComponent(jButton93)
                            .addComponent(jButton92))))
                .addContainerGap(387, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drillSelectorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton99)
                .addGap(234, 234, 234))
        );
        drillSelectorPanelLayout.setVerticalGroup(
            drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drillSelectorPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton92))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton93))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton94))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton95))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton96))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton97))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drillSelectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton98))
                .addGap(55, 55, 55)
                .addComponent(jButton99)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        getContentPane().add(drillSelectorPanel, "card13");

        viewEntireRosterPanel.setPreferredSize(new java.awt.Dimension(933, 581));

        jLabel56.setText("jLabel56");

        jButton105.setText("Return");
        jButton105.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton105ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewEntireRosterPanelLayout = new javax.swing.GroupLayout(viewEntireRosterPanel);
        viewEntireRosterPanel.setLayout(viewEntireRosterPanelLayout);
        viewEntireRosterPanelLayout.setHorizontalGroup(
            viewEntireRosterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewEntireRosterPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(jButton105)
                .addGap(38, 38, 38))
        );
        viewEntireRosterPanelLayout.setVerticalGroup(
            viewEntireRosterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewEntireRosterPanelLayout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jButton105)
                .addContainerGap(279, Short.MAX_VALUE))
            .addGroup(viewEntireRosterPanelLayout.createSequentialGroup()
                .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(viewEntireRosterPanel, "card14");

        trainingResultsPanel.setPreferredSize(new java.awt.Dimension(933, 581));

        jLabel57.setText("jLabel57");

        jButton100.setText("Return to training menu");
        jButton100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton100ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout trainingResultsPanelLayout = new javax.swing.GroupLayout(trainingResultsPanel);
        trainingResultsPanel.setLayout(trainingResultsPanelLayout);
        trainingResultsPanelLayout.setHorizontalGroup(
            trainingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(jButton100)
                .addGap(57, 57, 57))
        );
        trainingResultsPanelLayout.setVerticalGroup(
            trainingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, trainingResultsPanelLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addGroup(trainingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton100))
                .addGap(88, 88, 88))
        );

        getContentPane().add(trainingResultsPanel, "card15");

        yearlyStatsPanel.setPreferredSize(new java.awt.Dimension(933, 581));

        jLabel58.setText("jLabel27");

        jLabel59.setText("jLabel27");

        jLabel60.setText("jLabel27");

        jButton101.setText("Next page");
        jButton101.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton101ActionPerformed(evt);
            }
        });

        jButton102.setText("Prev page");
        jButton102.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton102ActionPerformed(evt);
            }
        });

        jButton103.setText("Return");
        jButton103.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton103ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout yearlyStatsPanelLayout = new javax.swing.GroupLayout(yearlyStatsPanel);
        yearlyStatsPanel.setLayout(yearlyStatsPanelLayout);
        yearlyStatsPanelLayout.setHorizontalGroup(
            yearlyStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yearlyStatsPanelLayout.createSequentialGroup()
                .addGroup(yearlyStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(yearlyStatsPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(yearlyStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel60, javax.swing.GroupLayout.DEFAULT_SIZE, 857, Short.MAX_VALUE)
                            .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(yearlyStatsPanelLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jButton102)
                        .addGap(38, 38, 38)
                        .addComponent(jButton101)
                        .addGap(133, 133, 133)
                        .addComponent(jButton103)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        yearlyStatsPanelLayout.setVerticalGroup(
            yearlyStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yearlyStatsPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                .addGroup(yearlyStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton101)
                    .addComponent(jButton102)
                    .addComponent(jButton103))
                .addGap(49, 49, 49))
        );

        getContentPane().add(yearlyStatsPanel, "card16");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int index = viewRosterPageNumber * 5 + 0;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToStarters(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        setupViewRosterPanel();
        System.out.println("year = " + league.getYear());
        switchToAnotherPanel(mainPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int index = viewRosterPageNumber * 5 + 1;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToStarters(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int index = viewRosterPageNumber * 5 + 2;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToStarters(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int index = viewRosterPageNumber * 5 + 3;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToStarters(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        int index = viewRosterPageNumber * 5 + 4;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToStarters(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        Player p = playerTeam.getSquad()[0];
        addPlayerToRoster(p);
        playerTeam.getSquad()[0] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        Player p = playerTeam.getSquad()[1];
        addPlayerToRoster(p);
        playerTeam.getSquad()[1] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        Player p = playerTeam.getSquad()[2];
        addPlayerToRoster(p);
        playerTeam.getSquad()[2] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        Player p = playerTeam.getSquad()[3];
        addPlayerToRoster(p);
        playerTeam.getSquad()[3] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        Player p = playerTeam.getSquad()[4];
        addPlayerToRoster(p);
        playerTeam.getSquad()[4] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        Player p = playerTeam.getSquad()[0];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        Player p = playerTeam.getSquad()[1];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        Player p = playerTeam.getSquad()[2];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        Player p = playerTeam.getSquad()[3];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        Player p = playerTeam.getSquad()[4];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        switchToAnotherPanel(playerDetailsPanel, prevPanel);
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        Player p = playerTeam.getBench()[0];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        Player p = playerTeam.getBench()[1];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        Player p = playerTeam.getBench()[2];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        Player p = playerTeam.getBench()[3];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        Player p = playerTeam.getBench()[4];
        setupPlayerDetailsPanel(p);
        prevPanel = viewPlayersPanel;
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        Player p = playerTeam.getBench()[4];
        addPlayerToRoster(p);
        playerTeam.getBench()[4] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        Player p = playerTeam.getBench()[0];
        addPlayerToRoster(p);
        playerTeam.getBench()[0] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        Player p = playerTeam.getBench()[1];
        addPlayerToRoster(p);
        playerTeam.getBench()[1] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        Player p = playerTeam.getBench()[2];
        addPlayerToRoster(p);
        playerTeam.getBench()[2] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        Player p = playerTeam.getBench()[3];
        addPlayerToRoster(p);
        playerTeam.getBench()[3] = null;
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = viewRosterPageNumber * 5 + 0;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToBench(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int index = viewRosterPageNumber * 5 + 1;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToBench(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int index = viewRosterPageNumber * 5 + 2;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToBench(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        int index = viewRosterPageNumber * 5 + 3;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToBench(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        int index = viewRosterPageNumber * 5 + 4;
        Player p = playerTeam.getRoster().get(index);
        
        addPlayerToBench(p);
        
        setupViewRosterPanel();
        switchToAnotherPanel(viewPlayersPanel, viewPlayersPanel);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        int minForNextPage = (viewRosterPageNumber+1) * 5;
        if(playerTeam.getRoster().size()>=minForNextPage){
            viewRosterPageNumber++;
            setupViewRosterPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Not enough players on your roster to see another page.");
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        if(viewRosterPageNumber!=0){
            viewRosterPageNumber--;
            setupViewRosterPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "You are already on page 0.");
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        viewRosterPageNumber = 0;
        switchToAnotherPanel(viewPlayersPanel, mainPanel);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int index = viewRosterPageNumber * 5 + 0;
        Player p = playerTeam.getRoster().get(index);
        prevPanel = viewPlayersPanel;
        setupPlayerDetailsPanel(p);
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int index = viewRosterPageNumber * 5 + 1;
        Player p = playerTeam.getRoster().get(index);
        prevPanel = viewPlayersPanel;
        setupPlayerDetailsPanel(p);
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int index = viewRosterPageNumber * 5 + 2;
        Player p = playerTeam.getRoster().get(index);
        prevPanel = viewPlayersPanel;
        setupPlayerDetailsPanel(p);
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        int index = viewRosterPageNumber * 5 + 3;
        Player p = playerTeam.getRoster().get(index);
        prevPanel = viewPlayersPanel;
        setupPlayerDetailsPanel(p);
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        int index = viewRosterPageNumber * 5 + 4;
        Player p = playerTeam.getRoster().get(index);
        prevPanel = viewPlayersPanel;
        setupPlayerDetailsPanel(p);
        switchToAnotherPanel(viewPlayersPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        league.simulateSeason();
        league.sortTeamsByWins();
        setupStandingsPanel();
        switchToAnotherPanel(mainPanel, seasonStandingsPanel);
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        // for now it goes to main for stats purposes
        league.createPlayoffTeamsList();
        league.getPlayoffMatchups().clear();
        // if player team is in the playoffs, make a method in MainFrame that controls it via a panel.
        if(league.getPlayoffTeams().contains(playerTeam)){
            league.simPlayoffRound(playerTeam); // BEAUTIFUL CONFIRMED WORKING - IT SIMULATES WITHOUT THE PLAYERTEAM PRESENT OR THEIR MATCHUP !!!
            // now just goto game panel and watch/control the game there :)
            setupGamePanel();
            switchToAnotherPanel(seasonStandingsPanel, gamePanel);
            // then remove the team that loses (playerTeam or opponent) SIMPLE
        }else{
            league.simPlayoffs();
            setupPlayoffResultsPanel();
            switchToAnotherPanel(seasonStandingsPanel, playoffResultsPanel);
        }
    }//GEN-LAST:event_jButton42ActionPerformed

    private void setupGamePanel() {
        // Set team labels
        jLabel46.setText(playerTeam.getName() + " - " + playerTeamPlayoffWins);
        jLabel47.setText(league.getEnemyPlayoffTeam().getName() + " - " + enemyTeamPlayoffWins);

        // Create HTML tables for player stats
        StringBuilder playerTeamHTML = new StringBuilder("<html><table style='border-collapse: collapse; border: 1px solid black;'>");
        StringBuilder enemyTeamHTML = new StringBuilder("<html><table style='border-collapse: collapse; border: 1px solid black;'>");

        // Add headers for tables
        String header = "<tr style='border: 1px solid black;'><th style='border: 1px solid black;'>Name</th><th style='border: 1px solid black;'>AGE</th><th style='border: 1px solid black;'>POS</th><th style='border: 1px solid black;'>OVR</th><th style='border: 1px solid black;'>PTS</th><th style='border: 1px solid black;'>AST</th><th style='border: 1px solid black;'>REB</th><th style='border: 1px solid black;'>ORB</th><th style='border: 1px solid black;'>FG</th><th style='border: 1px solid black;'>3PT</th></tr>";
        playerTeamHTML.append(header);
        enemyTeamHTML.append(header);

        // Populate player team stats (squad + bench)
        for (Player p : playerTeam.getSquad()) {
            playerTeamHTML.append(createRow(p));
        }
        // Add a line to separate squad and bench players
        playerTeamHTML.append("<tr style='border: 1px solid black;'><td colspan='10' style='border: 1px solid black;'><hr></td></tr>");
        for (Player p : playerTeam.getBench()) {
            playerTeamHTML.append(createRow(p));
        }

        // Populate enemy team stats (squad + bench)
        for (Player p : league.getEnemyPlayoffTeam().getSquad()) {
            enemyTeamHTML.append(createRow(p));
        }
        // Add a line to separate squad and bench players
        enemyTeamHTML.append("<tr style='border: 1px solid black;'><td colspan='10' style='border: 1px solid black;'><hr></td></tr>");
        for (Player p : league.getEnemyPlayoffTeam().getBench()) {
            enemyTeamHTML.append(createRow(p));
        }

        // Close HTML tables
        playerTeamHTML.append("</table></html>");
        enemyTeamHTML.append("</table></html>");

        // Set the labels with the combined HTML tables
        jLabel44.setText(playerTeamHTML.toString());
        jLabel45.setText(enemyTeamHTML.toString());
    }

    
    String createRow(Player p) {
        return String.format(
            "<tr><td>%s</td><td>%d</td><td>%s</td><td>%d</td><td>%d</td><td>%d</td><td>%d</td><td>%d</td><td>%d/%d</td><td>%d/%d</td></tr>",
            p.getName(), p.getAge(), p.getPosition(), p.getOverallRating(), p.getPoints(), p.getAssists(),
            p.getRebounds(), p.getOffRebounds(), p.getFgMade(), p.getFgAttempted(), p.getThreePointersMade(), p.getThreePointersAttempted()
        );
    }

    
    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        if(league.getPlayoffTeams().size()==1){
            System.out.println("SIZE 0 PLAYOFF TEAM PLS !!!");
            league.setCurrentChampionTeam(league.getPlayoffTeams().get(0));
            for(Player p : league.getCurrentChampionTeam().getSquad()){
                p.setIsChampionThisYear(true);
            }
            for(Player p : league.getCurrentChampionTeam().getBench()){
                p.setIsChampionThisYear(true);
            }
            
            for(Player p : league.getCurrentChampionTeam().getRoster()){
                p.setIsChampionThisYear(true);
            }
        }

        startNewYear();
        setupResignPanel();
        switchToAnotherPanel(playoffResultsPanel, resignPlayersPanel);
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        int minForNextPage = (resignPageNumber+1) * 5;
        if(playerTeam.getRoster().size()>=minForNextPage){
            resignPageNumber++;
            setupResignPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Not enough players with expiring contracts to see another page.");
        }
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        if(resignPageNumber!=0){
            resignPageNumber--;
            setupResignPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "You are already on page 0.");
        }
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        resignPageNumber = 0;
        for(Player p : playerTeam.getIncomingFreeAgents()){
            league.getFreeAgents().add(p);
        }
        playerTeam.getIncomingFreeAgents().clear();
        // AI TEAMS WILL RESIGN PLAYERS HERE
        aiTeamsResignPlayers();
        
        league.getDraftees().clear();
        generateDraftees();
        
        System.out.println("THE DRAFT ");
        draftPicks.clear();
        for(Player p : league.getDraftees()){
            System.out.println(p.getName() + " - age: " + p.getAge() + " - overall: " + p.getOverallRating() + " - development: " + p.getDevelopment());
        }
        currentDraftPick = 0;
        league.sortTeamsByLosses();
        setupDraftPanel();
        switchToAnotherPanel(resignPlayersPanel, draftPanel);
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        int index = resignPageNumber * 5 + 0;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        setupPlayerDetailsPanel(p);
        prevPanel = resignPlayersPanel;
        switchToAnotherPanel(mainPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        int index = resignPageNumber * 5 + 1;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        setupPlayerDetailsPanel(p);
        prevPanel = resignPlayersPanel;
        switchToAnotherPanel(mainPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        int index = resignPageNumber * 5 + 2;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        setupPlayerDetailsPanel(p);
        prevPanel = resignPlayersPanel;
        switchToAnotherPanel(mainPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton55ActionPerformed

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
        int index = resignPageNumber * 5 + 3;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        setupPlayerDetailsPanel(p);
        prevPanel = resignPlayersPanel;
        switchToAnotherPanel(mainPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton56ActionPerformed

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        int index = resignPageNumber * 5 + 4;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        setupPlayerDetailsPanel(p);
        prevPanel = resignPlayersPanel;
        switchToAnotherPanel(mainPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton58ActionPerformed
        int index = resignPageNumber * 5 + 0;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        playerTeam.getIncomingFreeAgents().remove(p);
        league.getFreeAgents().add(p);
        setupResignPanel();
        switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
    }//GEN-LAST:event_jButton58ActionPerformed

    private void jButton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton59ActionPerformed
        int index = resignPageNumber * 5 + 1;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        playerTeam.getIncomingFreeAgents().remove(p);
        league.getFreeAgents().add(p);
        setupResignPanel();
        switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
    }//GEN-LAST:event_jButton59ActionPerformed

    private void jButton60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton60ActionPerformed
        int index = resignPageNumber * 5 + 2;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        playerTeam.getIncomingFreeAgents().remove(p);
        league.getFreeAgents().add(p);
        setupResignPanel();
        switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
    }//GEN-LAST:event_jButton60ActionPerformed

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        int index = resignPageNumber * 5 + 3;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        playerTeam.getIncomingFreeAgents().remove(p);
        league.getFreeAgents().add(p);
        setupResignPanel();
        switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jButton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton62ActionPerformed
        int index = resignPageNumber * 5 + 4;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        playerTeam.getIncomingFreeAgents().remove(p);
        league.getFreeAgents().add(p);
        setupResignPanel();
        switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
    }//GEN-LAST:event_jButton62ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        int index = resignPageNumber * 5 + 0;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        if(p.isRetiring()){
            JOptionPane.showMessageDialog(null, "This player is retiring.");
        }else{
            makeResigningDecisionForPlayer(p);
            setupResignPanel();
            switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
        }
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton49ActionPerformed
        int index = resignPageNumber * 5 + 1;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        if(p.isRetiring()){
            JOptionPane.showMessageDialog(null, "This player is retiring.");
        }else{
            makeResigningDecisionForPlayer(p);
            setupResignPanel();
            switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
        }
    }//GEN-LAST:event_jButton49ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
        int index = resignPageNumber * 5 + 2;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        if(p.isRetiring()){
            JOptionPane.showMessageDialog(null, "This player is retiring.");
        }else{
            makeResigningDecisionForPlayer(p);
            setupResignPanel();
            switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
        }
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        int index = resignPageNumber * 5 + 3;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        if(p.isRetiring()){
            JOptionPane.showMessageDialog(null, "This player is retiring.");
        }else{
            makeResigningDecisionForPlayer(p);
            setupResignPanel();
            switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
        }
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        int index = resignPageNumber * 5 + 4;
        Player p = playerTeam.getIncomingFreeAgents().get(index);
        if(p.isRetiring()){
            JOptionPane.showMessageDialog(null, "This player is retiring.");
        }else{
            makeResigningDecisionForPlayer(p);
            setupResignPanel();
            switchToAnotherPanel(resignPlayersPanel, resignPlayersPanel);
        }
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton64ActionPerformed
        // advance to next user pick or end the draft. continueDraft()
        
        boolean isDraftOver = false;
        isUserPickingInDraft = false;
        
        boolean isUserPicking = continueDraft();
        if(isUserPicking){
            isUserPickingInDraft = true;
            setupDraftPanel();
            switchToAnotherPanel(draftPanel, draftPanel);
        }else{
            isUserPickingInDraft = false;
            isDraftOver = true;
        }

        
        // draft summary panel after this
        if(isDraftOver){
            System.out.println("Draft concluded.");
            currentDraftPick = 0;
            setupDraftSummaryPanel();
            switchToAnotherPanel(draftPanel, draftSummaryPanel);
        }
    }//GEN-LAST:event_jButton64ActionPerformed


    private boolean continueDraft(){
        
        league.sortTeamsByLosses();
        
        for(int k=currentDraftPick;k<10;k++){
            System.out.println("k = " + k + " - currentDraftPick = " + currentDraftPick);
            Team t = league.getTeams().get(k);
            if(t.equals(playerTeam)){
                // playerTeam, they draft now! switch to the panel here to refresh it and break out this loop
                System.out.println("USER PICKING RIGHT HERE AT NUMBA " + k);
                currentDraftPick = k+1;
                return true;
            }else{
                // AI teams picks their player (highest overall for now, maybe sorted by value at a later point)
                Player draftee = league.getDraftees().get(0);
                System.out.println(t.getName() + " has drafted " + draftee.getName());
                league.getDraftees().remove(draftee);
                t.getRoster().add(draftee);
                DraftPick dp = new DraftPick(t, draftee);
                draftPicks.add(dp);
            }
        }
        
        return false;
    }
    
    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton71ActionPerformed
        if(viewDraftPageNumber!=0){
            viewDraftPageNumber--;
            setupDraftPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "You are already on page 0.");
        }
    }//GEN-LAST:event_jButton71ActionPerformed

    private void jButton70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton70ActionPerformed
        int minForNextPage = (viewDraftPageNumber+1) * 3;
        if(playerTeam.getRoster().size()>=minForNextPage){
            viewDraftPageNumber++;
            setupDraftPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Not enough draftees to another page.");
        }
    }//GEN-LAST:event_jButton70ActionPerformed

    private void jButton63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton63ActionPerformed
        if(isUserPickingInDraft){
            Player p = league.getDraftees().get(viewDraftPageNumber*3+0);
            playerTeam.getRoster().add(p);
            league.getDraftees().remove(p);
            setupDraftPanel();
            switchToAnotherPanel(draftPanel, draftPanel);
            isUserPickingInDraft = false;
            System.out.println(playerTeam.getName() + " has drafted " + p.getName());
            playerTeam.regenMoneyAvailable();
            DraftPick dp = new DraftPick(playerTeam, p);
            draftPicks.add(dp);
        }else{
            JOptionPane.showMessageDialog(null, "It's not your turn to draft right now!");
        }
    }//GEN-LAST:event_jButton63ActionPerformed

    private void jButton65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton65ActionPerformed
        if(isUserPickingInDraft){
            Player p = league.getDraftees().get(viewDraftPageNumber*3+1);
            playerTeam.getRoster().add(p);
            league.getDraftees().remove(p);
            setupDraftPanel();
            switchToAnotherPanel(draftPanel, draftPanel);
            isUserPickingInDraft = false;
            System.out.println(playerTeam.getName() + " has drafted " + p.getName());
            playerTeam.regenMoneyAvailable();
            DraftPick dp = new DraftPick(playerTeam, p);
            draftPicks.add(dp);
        }else{
            JOptionPane.showMessageDialog(null, "It's not your turn to draft right now!");
        }
    }//GEN-LAST:event_jButton65ActionPerformed

    private void jButton66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton66ActionPerformed
        if(isUserPickingInDraft){
            Player p = league.getDraftees().get(viewDraftPageNumber*3+2);
            playerTeam.getRoster().add(p);
            league.getDraftees().remove(p);
            setupDraftPanel();
            switchToAnotherPanel(draftPanel, draftPanel);
            isUserPickingInDraft = false;
            System.out.println(playerTeam.getName() + " has drafted " + p.getName());
            playerTeam.regenMoneyAvailable();
            DraftPick dp = new DraftPick(playerTeam, p);
            draftPicks.add(dp);
        }else{
            JOptionPane.showMessageDialog(null, "It's not your turn to draft right now!");
        }
    }//GEN-LAST:event_jButton66ActionPerformed

    private void jButton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton67ActionPerformed
        prevPanel = draftPanel;
        setupPlayerDetailsPanel(league.getDraftees().get(viewDraftPageNumber*3+0));
        switchToAnotherPanel(draftPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton67ActionPerformed

    private void jButton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton68ActionPerformed
        prevPanel = draftPanel;
        setupPlayerDetailsPanel(league.getDraftees().get(viewDraftPageNumber*3+1));
        switchToAnotherPanel(draftPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton68ActionPerformed

    private void jButton69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton69ActionPerformed
        prevPanel = draftPanel;
        setupPlayerDetailsPanel(league.getDraftees().get(viewDraftPageNumber*3+2));
        switchToAnotherPanel(draftPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton69ActionPerformed

    private void jButton72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton72ActionPerformed
        // FREE AGENCY: randomly order teams -> team picks highest value player and sends an offer if they have enough money -> player reacts to offer -> next team. repeat.
        // do this about 5-10 times. if a team has 12 players total, stop the count.
        league.setFreeAgencyOrder(league.getTeams());
        
        do{
            Collections.shuffle(league.getFreeAgencyOrder());
        }while(league.getFreeAgencyOrder().get(29).equals(playerTeam));
        
        for(Player p : league.getFreeAgents()){
            p.regenFreeAgencyValue();
        }
        
        
        ArrayList<Player> retiringPlayers = new ArrayList<>();
        for(Player p : league.getFreeAgents()){
            if(p.isRetiring()){
                retiringPlayers.add(p);
            }
        }
        
        for(Player p : retiringPlayers){
            if(league.getFreeAgents().contains(p)){
                league.getFreeAgents().remove(p);
            }
        }
        
        
        Collections.sort(league.getFreeAgents());
        Collections.reverse(league.getFreeAgents());
        
        for(Player p : league.getFreeAgents()){
            System.out.println("free agent: " + p.getName() + " - ovr: " + p.getOverallRating() + " - FA value: " + p.getFreeAgentValue());
        }
        
        int counter = 0;
        for(Team t : league.getFreeAgencyOrder()){
            System.out.println("TEAM " + counter + " - " + t.getName());
            counter++;
            t.regenMoneyAvailable();
        }
        
        currentFreeAgencyPick = 0;
        currentFreeAgencyDay = 1;
        setupFreeAgencyPanel();
        switchToAnotherPanel(draftSummaryPanel, freeAgencyPanel);  

    }//GEN-LAST:event_jButton72ActionPerformed

    private void jButton81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton81ActionPerformed
        int minForNextPage = (viewFreeAgentsPageNumber+1) * 3;
        if(league.getFreeAgents().size()>=minForNextPage){
            viewFreeAgentsPageNumber++;
            setupFreeAgencyPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Not enough free agents to view another page.");
        }
    }//GEN-LAST:event_jButton81ActionPerformed

    private void jButton80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton80ActionPerformed
        if(viewFreeAgentsPageNumber!=0){
            viewFreeAgentsPageNumber--;
            setupFreeAgencyPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "You are already on page 0.");
        }
    }//GEN-LAST:event_jButton80ActionPerformed

    private void jButton76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton76ActionPerformed
        prevPanel = freeAgencyPanel;
        setupPlayerDetailsPanel(league.getFreeAgents().get(viewFreeAgentsPageNumber*3+0));
        switchToAnotherPanel(freeAgencyPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton76ActionPerformed

    private void jButton77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton77ActionPerformed
        prevPanel = freeAgencyPanel;
        setupPlayerDetailsPanel(league.getFreeAgents().get(viewFreeAgentsPageNumber*3+1));
        switchToAnotherPanel(freeAgencyPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton77ActionPerformed

    private void jButton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton78ActionPerformed
        prevPanel = freeAgencyPanel;
        setupPlayerDetailsPanel(league.getFreeAgents().get(viewFreeAgentsPageNumber*3+2));
        switchToAnotherPanel(freeAgencyPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton78ActionPerformed

    private void jButton79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton79ActionPerformed
        setupFreeAgencyPanel();
        getContentPane().revalidate();
        getContentPane().repaint();
        switchToAnotherPanel(freeAgencyPanel, freeAgencyPanel);
        simulateFreeAgency();
        currentFreeAgencyPick++;
    }//GEN-LAST:event_jButton79ActionPerformed

    private void jButton73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton73ActionPerformed
        Player p = league.getFreeAgents().get(viewFreeAgentsPageNumber * 3 + 0);
        if(isUserPickingInFreeAgency && null != p){
            if(playerTeam.getMoneyAvailable()>p.getContract().getSalary()){
                boolean signingDecision = p.getSigningDecision();
                if(signingDecision){
                    league.getFreeAgents().remove(p);
                    playerTeam.getRoster().add(p);
                    playerTeam.regenMoneyAvailable();
                    JOptionPane.showMessageDialog(null, "You have successfully signed " + p.getName() + "!!!");
                }else{
                    JOptionPane.showMessageDialog(null, "Your offer was DECLINED by " + p.getName());
                }
                isUserPickingInFreeAgency = false;
                setupFreeAgencyPanel();
                switchToAnotherPanel(freeAgencyPanel, freeAgencyPanel);
            }else{
                JOptionPane.showMessageDialog(null, "You don't have enough money available to sign this player.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "You cannot make any offers at this time (one per day).");
        }  
    }//GEN-LAST:event_jButton73ActionPerformed

    private void jButton89ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton89ActionPerformed
        int minForNextPage = (viewTrainingPageNumber+1) * 3;
        if(playerTeam.getRoster().size()>=minForNextPage){
            viewTrainingPageNumber++;
            setupTrainingPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Not enough players to view another page.");
        }
    }//GEN-LAST:event_jButton89ActionPerformed

    private void jButton83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton83ActionPerformed
        prevPanel = trainingPanel;
        setupPlayerDetailsPanel(playerTeam.getRoster().get(viewTrainingPageNumber*3+0));
        switchToAnotherPanel(trainingPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton83ActionPerformed

    private void jButton90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton90ActionPerformed
        if(viewTrainingPageNumber!=0){
            viewTrainingPageNumber--;
            setupTrainingPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "You are already on page 0.");
        }
    }//GEN-LAST:event_jButton90ActionPerformed

    private void jButton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton74ActionPerformed
        Player p = league.getFreeAgents().get(viewFreeAgentsPageNumber * 3 + 1);
        if(isUserPickingInFreeAgency && null != p){
            if(playerTeam.getMoneyAvailable()>p.getContract().getSalary()){
                boolean signingDecision = p.getSigningDecision();
                if(signingDecision){
                    league.getFreeAgents().remove(p);
                    playerTeam.getRoster().add(p);
                    playerTeam.regenMoneyAvailable();
                    JOptionPane.showMessageDialog(null, "You have successfully signed " + p.getName() + "!!!");
                }else{
                    JOptionPane.showMessageDialog(null, "Your offer was DECLINED by " + p.getName());
                }
                isUserPickingInFreeAgency = false;
                setupFreeAgencyPanel();
                switchToAnotherPanel(freeAgencyPanel, freeAgencyPanel);
            }else{
                JOptionPane.showMessageDialog(null, "You don't have enough money available to sign this player.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "You cannot make any offers at this time (one per day).");
        }
    }//GEN-LAST:event_jButton74ActionPerformed

    private void jButton75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton75ActionPerformed
        Player p = league.getFreeAgents().get(viewFreeAgentsPageNumber * 3 + 2);
        if(isUserPickingInFreeAgency && null != p){
            if(playerTeam.getMoneyAvailable()>p.getContract().getSalary()){
                boolean signingDecision = p.getSigningDecision();
                if(signingDecision){
                    league.getFreeAgents().remove(p);
                    playerTeam.getRoster().add(p);
                    playerTeam.regenMoneyAvailable();
                    JOptionPane.showMessageDialog(null, "You have successfully signed " + p.getName() + "!!!");
                }else{
                    JOptionPane.showMessageDialog(null, "Your offer was DECLINED by " + p.getName());
                }
                isUserPickingInFreeAgency = false;
                setupFreeAgencyPanel();
                switchToAnotherPanel(freeAgencyPanel, freeAgencyPanel);
            }else{
                JOptionPane.showMessageDialog(null, "You don't have enough money available to sign this player.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "You cannot make any offers at this time (one per day).");
        }
    }//GEN-LAST:event_jButton75ActionPerformed

    private void jButton84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton84ActionPerformed
        prevPanel = trainingPanel;
        setupPlayerDetailsPanel(playerTeam.getRoster().get(viewTrainingPageNumber*3+1));
        switchToAnotherPanel(trainingPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton84ActionPerformed

    private void jButton85ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton85ActionPerformed
        prevPanel = trainingPanel;
        setupPlayerDetailsPanel(playerTeam.getRoster().get(viewTrainingPageNumber*3+2));
        switchToAnotherPanel(trainingPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton85ActionPerformed

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        // everything is already handled in startNewYear() method. here we just handle ai roster rating / development.
        // and also increase the year.
        // AND FINALLY, add filler players to teams who need them :)
        
        for(Team t : league.getTeams()){
            if(t.equals(playerTeam)){
                for(Player p : t.getRoster()){
                    if(p.getAge()>=30){
                        reduceRatings(p);
                    }
                    p.setHasTrainedThisYear(false);
                    p.regenOverallRating();
                    p.resetGameStats();
                    p.resetTotalStats();
                }
                t.autoSortLineups();
            }else{
                for(Player p : t.getRoster()){
                    if(p.getAge()>=30){
                        reduceRatings(p);
                    }else{
                        increaseRatings(p);
                    }
                    p.setHasTrainedThisYear(false);
                    p.regenOverallRating();
                    p.resetGameStats();
                    p.resetTotalStats();
                }
                t.autoSortLineups();
            }
        }
        
        league.setYear(league.getYear()+1);
        // ADD FILLER PLAYERS FOR EACH TEAM HERE. MAKE THIS FILLER METHOD IN THE LEAGUE CLASS!!! basically if squad[1] or bench[1] = null gen a player at that pos and regen lineups
        
        league.addFillerPlayersToTeams();
        
        for(Team t : league.getTeams()){
            t.setWins(0);
            t.setLosses(0);
        }
        
        playerTeamPlayoffWins = 0;
        enemyTeamPlayoffWins = 0;
        switchToAnotherPanel(trainingPanel, mainPanel);
    }//GEN-LAST:event_jButton91ActionPerformed

    private void reduceRatings(Player p){
        Random r = new Random();
        
    
        // Reduce each attribute by a random amount between 1 and 5, ensuring the rating does not go below 15
        p.setCloseSkill(Math.max(p.getCloseSkill() - (r.nextInt(5) + 1), 15));
        p.setMidShotSkill(Math.max(p.getMidShotSkill() - (r.nextInt(5) + 1), 15));
        p.setThreeShotSkill(Math.max(p.getThreeShotSkill() - (r.nextInt(5) + 1), 15));
        p.setPassingSkill(Math.max(p.getPassingSkill() - (r.nextInt(5) + 1), 15));
        p.setDriveSkill(Math.max(p.getDriveSkill() - (r.nextInt(5) + 1), 15));
        p.setStrengthSkill(Math.max(p.getStrengthSkill() - (r.nextInt(5) + 1), 15));
        p.setSpeedSkill(Math.max(p.getSpeedSkill() - (r.nextInt(5) + 1), 15));
        p.setDribblingSkill(Math.max(p.getDribblingSkill() - (r.nextInt(5) + 1), 15));
        p.setPerimeterDefSkill(Math.max(p.getPerimeterDefSkill() - (r.nextInt(5) + 1), 15));
        p.setInteriorDefSkill(Math.max(p.getInteriorDefSkill() - (r.nextInt(5) + 1), 15));
        p.setStealSkill(Math.max(p.getStealSkill() - (r.nextInt(5) + 1), 15));
        p.setInterceptionSkill(Math.max(p.getInterceptionSkill() - (r.nextInt(5) + 1), 15));
        p.setBlockingSkill(Math.max(p.getBlockingSkill() - (r.nextInt(5) + 1), 15));
        p.setDefRebounding(Math.max(p.getDefRebounding() - (r.nextInt(5) + 1), 15));
        p.setOffRebounding(Math.max(p.getOffRebounding() - (r.nextInt(5) + 1), 15));

        // Regenerate the overall rating after reducing the skills
        p.regenOverallRating();
    }
   

    private void increaseRatings(Player p) {
        Random r = new Random();

        // Map to store tendencies and corresponding skills with random values within their range
        Map<String, Integer> tendencies = new HashMap<>();
        tendencies.put("drive", r.nextInt(p.getDriveTendy()) + 1);
        tendencies.put("dribbleDrive", r.nextInt(p.getDribbleDriveTendy()) + 1);
        tendencies.put("speedDrive", r.nextInt(p.getSpeedDriveTendy()) + 1);
        tendencies.put("powerDrive", r.nextInt(p.getPowerDriveTendy()) + 1);
        tendencies.put("passing", r.nextInt(p.getPassTendy()) + 1);
        tendencies.put("shootClose", r.nextInt(p.getShootCloseTendy()) + 1);
        tendencies.put("shootMid", r.nextInt(p.getShootMidTendy()) + 1);
        tendencies.put("shootThree", r.nextInt(p.getShootThreeTendy()) + 1);
        tendencies.put("offRebound", r.nextInt(p.getOffReboundTendy()) + 1);
        tendencies.put("defRebound", r.nextInt(p.getDefReboundTendy()) + 1);
        tendencies.put("perimeterDef", r.nextInt(p.getPerimeterDefSkill()) + 1);
        tendencies.put("interiorDef", r.nextInt(p.getInteriorDefSkill()) + 1);

        // Sort the tendencies based on the values and get the top 3
        List<Map.Entry<String, Integer>> sortedTendencies = tendencies.entrySet().stream()
                .sorted((entry1, entry2) -> entry2.getValue().compareTo(entry1.getValue()))
                .limit(3)
                .collect(Collectors.toList());

        // Increase the ratings based on the top 3 tendencies
        for (Map.Entry<String, Integer> tendency : sortedTendencies) {
            String key = tendency.getKey();
            int increment = getValueWithinRange(1, 3) * p.getDevelopment();

            switch (key) {
                case "drive":
                    p.setDriveSkill(p.getDriveSkill() + increment);
                    break;
                case "dribbleDrive":
                    p.setDribblingSkill(p.getDribblingSkill() + increment);
                    break;
                case "speedDrive":
                    p.setSpeedSkill(p.getSpeedSkill() + increment);
                    break;
                case "powerDrive":
                    p.setStrengthSkill(p.getStrengthSkill() + increment);
                    break;
                case "passing":
                    p.setPassingSkill(p.getPassingSkill() + increment);
                    break;
                case "shootClose":
                    p.setCloseSkill(p.getCloseSkill() + increment);
                    break;
                case "shootMid":
                    p.setMidShotSkill(p.getMidShotSkill() + increment);
                    break;
                case "shootThree":
                    p.setThreeShotSkill(p.getThreeShotSkill() + increment);
                    break;
                case "offRebound":
                    p.setOffRebounding(p.getOffRebounding() + increment);
                    break;
                case "defRebound":
                    p.setDefRebounding(p.getDefRebounding() + increment);
                    break;
                case "perimeterDef":
                    p.setPerimeterDefSkill(p.getPerimeterDefSkill()+ increment);
                    break;
                case "interiorDef":
                    p.setInteriorDefSkill(p.getInteriorDefSkill()+ increment);
                    break;
            }
        }

        // Regenerate the overall rating after increasing the skills
        p.regenOverallRating();
    }


    
    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed

        if(playerTeamPlayoffWins == 4 || enemyTeamPlayoffWins == 4){
            PlayoffMatchup pm = new PlayoffMatchup(playerTeam,league.getEnemyPlayoffTeam(),playerTeamPlayoffWins,enemyTeamPlayoffWins);
            league.getPlayoffMatchups().add(pm);
            if(playerTeamPlayoffWins == 4){
                league.getPlayoffTeams().remove(league.getEnemyPlayoffTeam());
                if(league.getPlayoffTeams().size()==1){
                    setupPlayoffResultsPanel();
                    switchToAnotherPanel(gamePanel, playoffResultsPanel);
                }else{
                    playerTeamPlayoffWins = 0;
                    enemyTeamPlayoffWins = 0;
                    league.simPlayoffRound(playerTeam); // sims other playoff matches
                    // now just goto game panel and watch/control the game there :)
                    setupGamePanel();
                    switchToAnotherPanel(gamePanel, gamePanel);
                }   
            }else{
                league.getPlayoffTeams().remove(playerTeam);
                for(Team t : league.getPlayoffTeams()){
                    System.out.println("team in da playoffs: " + t.getName());
                }
                league.simPlayoffs();
                setupPlayoffResultsPanel();
                switchToAnotherPanel(gamePanel, playoffResultsPanel);
            }
        }else{
            Game game = new Game(playerTeam, league.getEnemyPlayoffTeam());
            game.setIsWatchingGame(true);
            game.simGame();

            if(playerTeam.getGameScore()>=league.getEnemyPlayoffTeam().getGameScore()){
                playerTeamPlayoffWins++;
            }else{
                enemyTeamPlayoffWins++;
            }


            setupGamePanel();
            getContentPane().revalidate();
            getContentPane().repaint();
            switchToAnotherPanel(gamePanel, gamePanel);

            for(Player p : playerTeam.getSquad()){
                p.updateTotalStats();
                p.resetGameStats();
            }
            for(Player p : league.getEnemyPlayoffTeam().getSquad()){
                p.updateTotalStats();
                p.resetGameStats();
            }

            for(Player p : playerTeam.getBench()){
                p.updateTotalStats();
                p.resetGameStats();
            }
            for(Player p : league.getEnemyPlayoffTeam().getBench()){
                p.updateTotalStats();
                p.resetGameStats();
            }
        }
        
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton86ActionPerformed
        
        trainingPlayer = playerTeam.getRoster().get(viewTrainingPageNumber*3+0);
        if(trainingPlayer.hasTrainedThisYear()){
            JOptionPane.showMessageDialog(null, "This player has already trained this year.");
        }else if(trainingPlayer.getAge()>=30){
            JOptionPane.showMessageDialog(null, "Only players under 30 years old may train. Note: This player will regress after training.");
        }else if(playerTeam.getTrainingPointsLeft()<=0){
            JOptionPane.showMessageDialog(null, "You don't have any training points remaining!");
        }else{
            setupDrillSelectorPanel();
            switchToAnotherPanel(trainingPanel, drillSelectorPanel);
        }
    }//GEN-LAST:event_jButton86ActionPerformed

    private void jButton87ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton87ActionPerformed
        trainingPlayer = playerTeam.getRoster().get(viewTrainingPageNumber*3+1);
        if(trainingPlayer.hasTrainedThisYear()){
            JOptionPane.showMessageDialog(null, "This player has already trained this year.");
        }else if(trainingPlayer.getAge()>=30){
            JOptionPane.showMessageDialog(null, "Only players under 30 years old may train. Note: This player will regress after training.");
        }else if(playerTeam.getTrainingPointsLeft()<=0){
            JOptionPane.showMessageDialog(null, "You don't have any training points remaining!");
        }else{
            setupDrillSelectorPanel();
            switchToAnotherPanel(trainingPanel, drillSelectorPanel);
        }
    }//GEN-LAST:event_jButton87ActionPerformed

    private void jButton88ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton88ActionPerformed
        trainingPlayer = playerTeam.getRoster().get(viewTrainingPageNumber*3+2);
        if(trainingPlayer.hasTrainedThisYear()){
            JOptionPane.showMessageDialog(null, "This player has already trained this year.");
        }else if(trainingPlayer.getAge()>=30){
            JOptionPane.showMessageDialog(null, "Only players under 30 years old may train. Note: This player will regress after training.");
        }else if(playerTeam.getTrainingPointsLeft()<=0){
            JOptionPane.showMessageDialog(null, "You don't have any training points remaining!");
        }else{
            setupDrillSelectorPanel();
            switchToAnotherPanel(trainingPanel, drillSelectorPanel);
        }
    }//GEN-LAST:event_jButton88ActionPerformed

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        // close shooting + driving
        String text = "";
        int closeShooting = getValueWithinRange(1, 3);
        int driving = getValueWithinRange(1, 3);
        
        closeShooting *= trainingPlayer.getDevelopment();
        driving *= trainingPlayer.getDevelopment();
        
        text = "<html><table style='border-collapse: collapse;'>";
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Close Shooting</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getCloseSkill() + "</td></tr>";

        trainingPlayer.setCloseSkill(trainingPlayer.getCloseSkill() + closeShooting);

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Close Shooting</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getCloseSkill() + "</td></tr>";

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Driving Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDriveSkill() + "</td></tr>";

        trainingPlayer.setDriveSkill(trainingPlayer.getDriveSkill() + driving);

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Driving Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDriveSkill() + "</td></tr>";
        text += "</table></html>";

        
        trainingPlayer.setHasTrainedThisYear(true); // set this to false next szn button
        
        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton92ActionPerformed

    private void jButton93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton93ActionPerformed
        // mid shooting + dribbling
        String text = "";
        int midShooting = getValueWithinRange(1, 3);
        int dribbling = getValueWithinRange(1, 3);
        
        midShooting *= trainingPlayer.getDevelopment();
        dribbling *= trainingPlayer.getDevelopment();
        
        
        text += "<html><table style='border-collapse: collapse;'>";
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Mid Shooting</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getMidShotSkill() + "</td></tr>";

        trainingPlayer.setMidShotSkill(trainingPlayer.getMidShotSkill() + midShooting);

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Mid Shooting</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getMidShotSkill() + "</td></tr>";

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Dribbling Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDribblingSkill() + "</td></tr>";

        trainingPlayer.setDribblingSkill(trainingPlayer.getDribblingSkill() + dribbling);

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Dribbling Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDribblingSkill() + "</td></tr>";
        text += "</table></html>";

        
        trainingPlayer.setHasTrainedThisYear(true); // set this to false next szn button
        
        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton93ActionPerformed

    private void jButton94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton94ActionPerformed
        // 3pt shooting
        String text = "";
        int threeShooting = getValueWithinRange(1, 3);
        
        threeShooting *= trainingPlayer.getDevelopment();
        
        
        text += "<html><table style='border-collapse: collapse;'>";
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Three Shooting</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getThreeShotSkill() + "</td></tr>";

        trainingPlayer.setThreeShotSkill(trainingPlayer.getThreeShotSkill() + threeShooting);

        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Three Shooting</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getThreeShotSkill() + "</td></tr>";
        text += "</table></html>";

        
        
        trainingPlayer.setHasTrainedThisYear(true); // set this to false next szn button
        
        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton94ActionPerformed

    private void jButton95ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton95ActionPerformed
        // Driving, Speed, and Passing
        String text = "";
        int driving = getValueWithinRange(1, 3);
        int speed = getValueWithinRange(1, 3);
        int passing = getValueWithinRange(1, 3);

        driving *= trainingPlayer.getDevelopment();
        speed *= trainingPlayer.getDevelopment();
        passing *= trainingPlayer.getDevelopment();

        // Update and display Driving
        text += "<html><table style='border-collapse: collapse;'>";

        // Update and display Driving Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Driving Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDriveSkill() + "</td></tr>";
        trainingPlayer.setDriveSkill(trainingPlayer.getDriveSkill() + driving);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Driving Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDriveSkill() + "</td></tr>";

        // Update and display Speed Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Speed Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getSpeedSkill() + "</td></tr>";
        trainingPlayer.setSpeedSkill(trainingPlayer.getSpeedSkill() + speed);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Speed Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getSpeedSkill() + "</td></tr>";

        // Update and display Passing Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Passing Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getPassingSkill() + "</td></tr>";
        trainingPlayer.setPassingSkill(trainingPlayer.getPassingSkill() + passing);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Passing Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getPassingSkill() + "</td></tr>";

        text += "</table></html>";


        trainingPlayer.setHasTrainedThisYear(true); // set this to false next season button

        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton95ActionPerformed

    private void jButton96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton96ActionPerformed
        // Speed and Perimeter Defense
        String text = "";
        int speed = getValueWithinRange(1, 3);
        int perimeterDefense = getValueWithinRange(1, 3);

        speed *= trainingPlayer.getDevelopment();
        perimeterDefense *= trainingPlayer.getDevelopment();

        text += "<html><table style='border-collapse: collapse;'>";

        // Update and display Speed Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Speed Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getSpeedSkill() + "</td></tr>";
        trainingPlayer.setSpeedSkill(trainingPlayer.getSpeedSkill() + speed);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Speed Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getSpeedSkill() + "</td></tr>";

        // Update and display Perimeter Defense Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Perimeter Defense Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getPerimeterDefSkill() + "</td></tr>";
        trainingPlayer.setPerimeterDefSkill(trainingPlayer.getPerimeterDefSkill() + perimeterDefense);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Perimeter Defense Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getPerimeterDefSkill() + "</td></tr>";

        text += "</table></html>";


        trainingPlayer.setHasTrainedThisYear(true); // set this to false next season button

        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton96ActionPerformed

    private void jButton97ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton97ActionPerformed
        // Interior Defense and Strength
        String text = "";
        int interiorDefense = getValueWithinRange(1, 3);
        int strength = getValueWithinRange(1, 3);

        interiorDefense *= trainingPlayer.getDevelopment();
        strength *= trainingPlayer.getDevelopment();

        text += "<html><table style='border-collapse: collapse;'>";

        // Update and display Interior Defense Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Interior Defense Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getInteriorDefSkill() + "</td></tr>";
        trainingPlayer.setInteriorDefSkill(trainingPlayer.getInteriorDefSkill() + interiorDefense);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Interior Defense Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getInteriorDefSkill() + "</td></tr>";

        // Update and display Strength Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Strength Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getStrengthSkill() + "</td></tr>";
        trainingPlayer.setStrengthSkill(trainingPlayer.getStrengthSkill() + strength);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Strength Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getStrengthSkill() + "</td></tr>";

        text += "</table></html>";


        trainingPlayer.setHasTrainedThisYear(true); // set this to false next season button

        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton97ActionPerformed

    private void jButton98ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton98ActionPerformed
        // Offensive Rebounding and Defensive Rebounding
        String text = "";
        int offensiveRebounding = getValueWithinRange(1, 3);
        int defensiveRebounding = getValueWithinRange(1, 3);

        offensiveRebounding *= trainingPlayer.getDevelopment();
        defensiveRebounding *= trainingPlayer.getDevelopment();

        text += "<html><table style='border-collapse: collapse;'>";

        // Update and display Offensive Rebounding Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Offensive Rebounding Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getOffRebounding() + "</td></tr>";
        trainingPlayer.setOffRebounding(trainingPlayer.getOffRebounding() + offensiveRebounding);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Offensive Rebounding Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getOffRebounding() + "</td></tr>";

        // Update and display Defensive Rebounding Skill
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>Former Defensive Rebounding Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDefRebounding() + "</td></tr>";
        trainingPlayer.setDefRebounding(trainingPlayer.getDefRebounding() + defensiveRebounding);
        text += "<tr><td style='border: 1px solid black; padding: 5px;'>New Defensive Rebounding Skill</td>";
        text += "<td style='border: 1px solid black; padding: 5px;'>" + trainingPlayer.getDefRebounding() + "</td></tr>";

        text += "</table></html>";


        trainingPlayer.setHasTrainedThisYear(true); // set this to false next season button

        setupTrainingResultsPanel(text);
        switchToAnotherPanel(drillSelectorPanel, trainingResultsPanel);
        trainingPlayer.regenOverallRating();
        trainingPlayer.regenInitTendy();
    }//GEN-LAST:event_jButton98ActionPerformed

    private void jButton99ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton99ActionPerformed
        setupTrainingPanel();
        switchToAnotherPanel(drillSelectorPanel, trainingPanel);
    }//GEN-LAST:event_jButton99ActionPerformed

    private void jButton100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton100ActionPerformed
        playerTeam.setTrainingPointsLeft(playerTeam.getTrainingPointsLeft()-1);
        setupTrainingPanel();
        switchToAnotherPanel(trainingResultsPanel, trainingPanel);
    }//GEN-LAST:event_jButton100ActionPerformed

    private void jButton101ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton101ActionPerformed
        int minForNextPage = (viewYearlyStatsPageNumber+1) * 3;
        if(yearlyStatsPlayer.getYearlyStats().size()>=minForNextPage){
            viewYearlyStatsPageNumber++;
            setupYearlyStatsPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Not enough stat years to view another page.");
        }
    }//GEN-LAST:event_jButton101ActionPerformed

    private void jButton102ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton102ActionPerformed
        if(viewYearlyStatsPageNumber!=0){
            viewYearlyStatsPageNumber--;
            setupYearlyStatsPanel();
            getContentPane().revalidate();
            getContentPane().repaint();
        }else{
            JOptionPane.showMessageDialog(null, "You are already on page 0.");
        }
    }//GEN-LAST:event_jButton102ActionPerformed

    private void jButton104ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton104ActionPerformed
        setupYearlyStatsPanel();
        switchToAnotherPanel(playerDetailsPanel, yearlyStatsPanel);
    }//GEN-LAST:event_jButton104ActionPerformed

    private void jButton103ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton103ActionPerformed
        switchToAnotherPanel(yearlyStatsPanel, playerDetailsPanel);
    }//GEN-LAST:event_jButton103ActionPerformed

    private void jButton106ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton106ActionPerformed
        setupViewEntireRosterPanel();
        prevBeforeEntireRosterPanel = resignPlayersPanel;
        switchToAnotherPanel(prevBeforeEntireRosterPanel, viewEntireRosterPanel);
    }//GEN-LAST:event_jButton106ActionPerformed

    private void jButton105ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton105ActionPerformed
        setupFreeAgencyPanel();
        // if panel = free
        switchToAnotherPanel(viewEntireRosterPanel, prevBeforeEntireRosterPanel);
    }//GEN-LAST:event_jButton105ActionPerformed

    private void jButton107ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton107ActionPerformed
        setupViewEntireRosterPanel();
        prevBeforeEntireRosterPanel = freeAgencyPanel;
        switchToAnotherPanel(prevBeforeEntireRosterPanel, viewEntireRosterPanel);
    }//GEN-LAST:event_jButton107ActionPerformed

    private void jButton108ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton108ActionPerformed
        setupViewEntireRosterPanel();
        prevBeforeEntireRosterPanel = draftPanel;
        switchToAnotherPanel(prevBeforeEntireRosterPanel, viewEntireRosterPanel);
    }//GEN-LAST:event_jButton108ActionPerformed

    private void setupYearlyStatsPanel(){
        try{
            YearlyStats s = yearlyStatsPlayer.getYearlyStats().get(viewYearlyStatsPageNumber*3+0);
            jLabel58.setText(s.generateStatline());
        }catch(Exception e){
            jLabel58.setText("-");
        }
        
        try{
            YearlyStats s = yearlyStatsPlayer.getYearlyStats().get(viewYearlyStatsPageNumber*3+1);
            jLabel59.setText(s.generateStatline());
        }catch(Exception e){
            jLabel59.setText("-");
        }
        
        try{
            YearlyStats s = yearlyStatsPlayer.getYearlyStats().get(viewYearlyStatsPageNumber*3+2);
            jLabel60.setText(s.generateStatline());
        }catch(Exception e){
            jLabel60.setText("-");
        }
    }
    
    private void setupDrillSelectorPanel(){
        
    }
    
    private void setupTrainingResultsPanel(String text){
        jLabel57.setText(text);
    }
    
    private int getValueWithinRange(int min, int max){
        Random r = new Random();
        return r.nextInt(max - min + 1) + min;
    }
    
    private void simulateFreeAgency(){
        
        // some players who dont get picked up in free agency will sign with teams on min deals
        for(int k=currentFreeAgencyPick; k<league.getTeams().size();k++){
            Team t = league.getFreeAgencyOrder().get(k);
            if(playerTeam.equals(t)){
                // stop the draft, setup the panel, refresh it, and they make their pick
                isUserPickingInFreeAgency = true;
                setupFreeAgencyPanel();
                getContentPane().revalidate();
                getContentPane().repaint();
                switchToAnotherPanel(freeAgencyPanel, freeAgencyPanel);
                break;
            }else{
                isUserPickingInFreeAgency = false;
                // send an offer and try to sign the top value player
                // make a 'playersTriedToSign' list to a team so they dont try to sign the same guy twice in back to back days
                
                // should be a loop until they find a player who isn't their 'playersTriedToSign' list
                
                if(!league.getFreeAgents().isEmpty()){
                    Player p = league.getFreeAgents().get(0);
                
                    if(p == null){
                        continue;
                    }

                    boolean signingDecision = p.getSigningDecision();

                    if(signingDecision && t.getRoster().size()<15){
                        t.regenMoneyAvailable();
                        if(t.getMoneyAvailable()>=p.getContract().getSalary()){
                            t.getRoster().add(p);
                            // remove from free agency
                            league.getFreeAgents().remove(p);
                            t.regenMoneyAvailable();
                            System.out.println(t.getName() + " have SIGNED " + p.getName() + " for " + p.getContract().getSalary() + "m per year for " + p.getContract().getLength() +
                                    " years!");
                        }
                    }else{
                        t.getPlayersTriedToSign().add(p);
                        System.out.println(t.getName() + " has had their offer declined by " + p.getName());
                    }
                }
                currentFreeAgencyPick++;
            }
            if(currentFreeAgencyPick>=30){
                k=-1;
                currentFreeAgencyPick = 0;
                currentFreeAgencyDay++;
            }
            
            if(currentFreeAgencyDay>8){
                System.out.println("8 days of Free Agency have passed, getting out now.");
                // switch to another panel
                playerTeam.setTrainingPointsLeft(5);
                viewTrainingPageNumber = 0;
                // sort the team 
                playerTeam.getRoster().sort((Player p1, Player p2) -> Integer.compare(p1.getOverallRating(), p2.getOverallRating()));
                Collections.reverse(playerTeam.getRoster());
                setupTrainingPanel();
                
                ArrayList<Player> retiringFreeAgents = new ArrayList<>();
                
                // right here, retire free agents
                for(Player p : league.getFreeAgents()){
                    if(p.getAge()>=33){
                        boolean isRetiring = p.getRetiringDecision();
                        if(isRetiring){
                            System.out.println(p.getName() + " is OFFICIALLY retiring after nobody picked him as a free agent at the ripe age of " + p.getAge());
                            p.setIsRetiring(true);
                            retiringFreeAgents.add(p);
                        }
                    }
                }
                
                for(Player p : retiringFreeAgents){
                    league.getFreeAgents().remove(p);
                }
                
                
                switchToAnotherPanel(freeAgencyPanel, trainingPanel);
                break;
            }
        }
        
    }
    
    private void setupViewEntireRosterPanel() {
        
        playerTeam.sortRosterByPosition();
        
        StringBuilder htmlBuilder = new StringBuilder("<html><style>");
        htmlBuilder.append("table { border-collapse: collapse; width: 100%; }")
                   .append("th, td { border: 1px solid black; padding: 8px; text-align: left; }")
                   .append("</style><table>")
                   .append("<tr>")
                   .append("<th>Basic Info</th>")  // Add a single header for basic info if using generateBasicInfo
                   .append("</tr>");

        for (Player p : playerTeam.getRoster()) {
            String text = p.generateBasicInfo();
            htmlBuilder.append("<tr><td>").append(text).append("</td></tr>");
        }

        htmlBuilder.append("</table></html>");

        // Assuming jLabelRoster is a JLabel to display the roster
        jLabel56.setText(htmlBuilder.toString());
    }

    
    private void setupTrainingPanel(){
        jLabel38.setText("Training points left: " + playerTeam.getTrainingPointsLeft());
        try{
            Player p = playerTeam.getRoster().get(viewTrainingPageNumber*3+0);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - DEV: " + p.getDevelopment();
            jLabel39.setText(text);
            jButton83.show();
            jButton86.show();
        }catch(Exception e){
            jLabel39.setText("-");
            jButton83.hide();
            jButton86.hide();
        }
        
        try{
            Player p = playerTeam.getRoster().get(viewTrainingPageNumber*3+1);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - DEV: " + p.getDevelopment();
            jLabel40.setText(text);
            jButton84.show();
            jButton87.show();
        }catch(Exception e){
            jLabel40.setText("-");
            jButton84.hide();
            jButton87.hide();
        }
        
        try{
            Player p = playerTeam.getRoster().get(viewTrainingPageNumber*3+2);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - DEV: " + p.getDevelopment();
            jLabel41.setText(text);
            jButton85.show();
            jButton88.show();
        }catch(Exception e){
            jLabel41.setText("-");
            jButton85.hide();
            jButton88.hide();
        }
    }
    
    private void makeResigningDecisionForPlayer(Player p){
        boolean signingDecision = p.getSigningDecision();
        if(signingDecision){
            playerTeam.regenMoneyAvailable();
            if(playerTeam.getMoneyAvailable()>=p.getContract().getSalary()){
                playerTeam.getRoster().add(p);
                playerTeam.getIncomingFreeAgents().remove(p);
                playerTeam.regenMoneyAvailable();
                JOptionPane.showMessageDialog(null, p.getName() + " resigned with your team!");
            }else{
                playerTeam.getIncomingFreeAgents().remove(p);
                league.getFreeAgents().add(p);
                JOptionPane.showMessageDialog(null, "Your team does not have enough money to sign " + p.getName());
            }
        }else{
            playerTeam.getIncomingFreeAgents().remove(p);
            league.getFreeAgents().add(p);
            JOptionPane.showMessageDialog(null, p.getName() +" declined your offer.");
        }
    }
    
    /**
     * What it modifies:
     * 1. LEAGUE YEAR: increments by 1 NO LONGER DOES THIS AS IT MESSES WITH THE YEARLY STATS. THIS IS INCREMENTED ELSEWHERE "finish training" button via training panel.
     * 2. Adds all players on every team to the roster, therein removing them from the starting lineups
     * 3. Decrements contract lengths and regens contracts of players with 0 contract length. Adds 0 length players to team's incoming free agents
     * 4. Increments ages of players
     * 5. Calculates money available for a team
     * 6. Sets yearlyStats for each player on a roster.
     */
    private void startNewYear(){
        
        // league.setYear(league.getYear()+1);
        
        
        
        for(Team t : league.getTeams()){
            for(int k=0;k<5;k++){
                Player p = t.getSquad()[k];
                p.setRole("STARTER");
                t.getRoster().add(p);
                t.getSquad()[k] = null;
                
                p = t.getBench()[k];
                p.setRole("SUB");
                t.getRoster().add(p);
                t.getBench()[k] = null;
            }
            
            
            for(Player p : t.getRoster()){
                p.addOntoYearlyStats(league.getYear(), t);
                p.setAge(p.getAge()+1);
                p.setYearsInTheLeague(p.getYearsInTheLeague()+1);
                p.regenPlayerPerformanceValue();
                // *** IF AGE IS GREATER THAN 30 THEN BEGIN DECLINING. IF GREATER THAN OR EQUAL TO 35 POSSIBLY RETIRE.
                p.getContract().setLength(p.getContract().getLength()-1);
                if(p.getContract().getLength()<=0){
                    t.getIncomingFreeAgents().add(p);
                }
                p.regenPlayerValue();
            }
            
            for(Player p : t.getIncomingFreeAgents()){
                if(t.getRoster().contains(p)){
                    t.getRoster().remove(p);
                }
                // regen their contracts possibly here. should be fine since they will be in the free agent pool of the league if not resigned.
                p.regenContract();
                
                // RIGHT HERE, CHANCE TO RETIRE AS THEIR CONTRACT IS COMPLETED !!!
                // If isRetiring is set to true, then the player cannot resign the player :)
                if(p.getAge()>=33){
                    boolean isRetiring = p.getRetiringDecision();
                    if(isRetiring){
                        p.setIsRetiring(true);
                    }
                }
            }
            
            int moneyUsed = 0;
            for(Player p : t.getRoster()){
                moneyUsed+= p.getContract().getSalary();
            }
            t.setMoneyAvailable(t.getMoneyTotal()-moneyUsed);
        }
        
        for(Player p : league.getFreeAgents()){
            p.setAge(p.getAge()+1);
            if(p.getAge()>=30){
                reduceRatings(p);
            }
            p.regenOverallRating();
            p.resetGameStats();
            p.resetTotalStats();
        }
        
    }
    
    private void setupFreeAgencyPanel(){
        jLabel35.setText("Money available: " + playerTeam.getMoneyAvailable() + "m / " + playerTeam.getMoneyTotal() + "m");
        if(isUserPickingInFreeAgency){
            jLabel36.setText("MAKE AN OFFER NOW");
        }else{
            jLabel36.setText("No offers can be made at this time.");
        }
        jLabel37.setText("Day " + currentFreeAgencyDay + " / 8");
        
        try{
            Player p = league.getFreeAgents().get(viewFreeAgentsPageNumber*3+0);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel32.setText(text);
            jButton73.show();
            jButton76.show();
        }catch(Exception e){
            jLabel32.setText("-");
            jButton73.hide();
            jButton76.hide();
        }
        
        try{
            Player p = league.getFreeAgents().get(viewFreeAgentsPageNumber*3+1);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel33.setText(text);
            jButton74.show();
            jButton77.show();
        }catch(Exception e){
            jLabel33.setText("-");
            jButton74.hide();
            jButton77.hide();
        }
        
        try{
            Player p = league.getFreeAgents().get(viewFreeAgentsPageNumber*3+2);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel34.setText(text);
            jButton75.show();
            jButton78.show();
        }catch(Exception e){
            jLabel34.setText("-");
            jButton75.hide();
            jButton78.hide();
        }
    }
    
    private void setupResignPanel(){
        
        jLabel26.setText("Money: " + playerTeam.getMoneyAvailable() + "m / " + playerTeam.getMoneyTotal() + "m");
        
        try{
            int index = resignPageNumber * 5 + 0;
            Player p = playerTeam.getIncomingFreeAgents().get(index);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel21.setText(text);
            jButton48.show();
            jButton53.show();
            jButton58.show();
        }catch(Exception e){
            jLabel21.setText("Empty");
            jButton48.hide();
            jButton53.hide();
            jButton58.hide();
        }
        
        try{
            int index = resignPageNumber * 5 + 1;
            Player p = playerTeam.getIncomingFreeAgents().get(index);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel22.setText(text);
            jButton49.show();
            jButton54.show();
            jButton59.show();
        }catch(Exception e){
            jLabel22.setText("Empty");
            jButton49.hide();
            jButton54.hide();
            jButton59.hide();
        }
        
        try{
            int index = resignPageNumber * 5 + 2;
            Player p = playerTeam.getIncomingFreeAgents().get(index);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel23.setText(text);
            jButton50.show();
            jButton55.show();
            jButton60.show();
        }catch(Exception e){
            jLabel23.setText("Empty");
            jButton50.hide();
            jButton55.hide();
            jButton60.hide();
        }
        
        try{
            int index = resignPageNumber * 5 + 3;
            Player p = playerTeam.getIncomingFreeAgents().get(index);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel24.setText(text);
            jButton51.show();
            jButton56.show();
            jButton61.show();
        }catch(Exception e){
            jLabel24.setText("Empty");
            jButton51.hide();
            jButton56.hide();
            jButton61.hide();
        }
        
        try{
            int index = resignPageNumber * 5 + 4;
            Player p = playerTeam.getIncomingFreeAgents().get(index);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - CON: " + 
                    p.getContract().getSalary() + "m / " + p.getContract().getLength() + "y" + " - DEV: " + p.getDevelopment();
            jLabel25.setText(text);
            jButton52.show();
            jButton57.show();
            jButton62.show();
        }catch(Exception e){
            jLabel25.setText("Empty");
            jButton52.hide();
            jButton57.hide();
            jButton62.hide();
        }
    }
    
    private void generateDraftees(){
        for(int k=0;k<10;k++){
            Player p;
            p = pc.createRandomPlayer();
            Random r = new Random();
            p.setAge(r.nextInt(24 - 18 + 1) + 18);
            p.setYearsInTheLeague(0);
            p.regenContract();
            league.getDraftees().add(p);
        }
        
        Collections.sort(league.getDraftees(), Comparator.comparingInt(Player::getOverallRating));
        Collections.reverse(league.getDraftees());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    private void addPlayerToRoster(Player p){
        playerTeam.getRoster().add(p);
    }
    
    private void addPlayerToStarters(Player p){
        Player starterThere;
        
        if(p.getPosition().equalsIgnoreCase("PG")){
            if(playerTeam.getSquad()[0] != null){
                starterThere = playerTeam.getSquad()[0];
                playerTeam.getRoster().add(starterThere);
            }
            playerTeam.getSquad()[0] = p;
        }else if(p.getPosition().equalsIgnoreCase("SG")){
            if(playerTeam.getSquad()[1] != null){
                starterThere = playerTeam.getSquad()[1];
                playerTeam.getRoster().add(starterThere);
            }
            playerTeam.getSquad()[1] = p;
        }else if(p.getPosition().equalsIgnoreCase("SF")){
            if(playerTeam.getSquad()[2] != null){
                starterThere = playerTeam.getSquad()[2];
                playerTeam.getRoster().add(starterThere);
            }
            playerTeam.getSquad()[2] = p;
        }else if(p.getPosition().equalsIgnoreCase("PF")){
            if(playerTeam.getSquad()[3] != null){
                starterThere = playerTeam.getSquad()[3];
                playerTeam.getRoster().add(starterThere);
            }
            playerTeam.getSquad()[3] = p;
        }else{
            if(playerTeam.getSquad()[4] != null){
                starterThere = playerTeam.getSquad()[4];
                playerTeam.getRoster().add(starterThere);
            }
            playerTeam.getSquad()[4] = p;
        }
        
        playerTeam.getRoster().remove(p);
    }
    
    private void addPlayerToBench(Player p){
        Player playerThere;
        
        if(p.getPosition().equalsIgnoreCase("PG")){
            if(playerTeam.getBench()[0] != null){
                playerThere = playerTeam.getBench()[0];
                playerTeam.getRoster().add(playerThere);
            }
            playerTeam.getBench()[0] = p;
        }else if(p.getPosition().equalsIgnoreCase("SG")){
            if(playerTeam.getBench()[1] != null){
                playerThere = playerTeam.getBench()[1];
                playerTeam.getRoster().add(playerThere);
            }
            playerTeam.getBench()[1] = p;
        }else if(p.getPosition().equalsIgnoreCase("SF")){
            if(playerTeam.getBench()[2] != null){
                playerThere = playerTeam.getBench()[2];
                playerTeam.getRoster().add(playerThere);
            }
            playerTeam.getBench()[2] = p;
        }else if(p.getPosition().equalsIgnoreCase("PF")){
            if(playerTeam.getBench()[3] != null){
                playerThere = playerTeam.getBench()[3];
                playerTeam.getRoster().add(playerThere);
            }
            playerTeam.getBench()[3] = p;
        }else{
            if(playerTeam.getBench()[4] != null){
                playerThere = playerTeam.getBench()[4];
                playerTeam.getRoster().add(playerThere);
            }
            playerTeam.getBench()[4] = p;
        }
        
        playerTeam.getRoster().remove(p);
    }
    
    /**
     * Switches from one panel to another
     * 
     * @param currentPanel
     * @param newPanel 
     */
    public void switchToAnotherPanel(JPanel currentPanel, JPanel newPanel){
        setContentPane(newPanel);
        currentPanel.hide();
        newPanel.show();
        getContentPane().revalidate();
        getContentPane().repaint();
    }
    
    private void aiTeamsResignPlayers(){
        for(Team t : league.getTeams()){
            Collections.sort(t.getIncomingFreeAgents(), Comparator.comparingInt(Player::getValue));
            Collections.reverse(t.getIncomingFreeAgents());
            
            System.out.println("\n\n");
            for(Player p : t.getIncomingFreeAgents()){
                System.out.println(p.getName() + " - player value = " + p.getValue() + " - overall: " + p.getOverallRating() + " - age: " + p.getAge() + " - dev: " + p.getDevelopment());
            }
            
            for(Player p : t.getIncomingFreeAgents()){
                // offer contracts and if "Declined" then they goto free agency. if value is too low they dont offer though based on rng.
                // if accepted then make sure they have enough money to sign the player.
                if(p.isRetiring()){
                    System.out.println(p.getName() + " is retiring at the age of " + p.getAge());
                }else{
                    boolean signingDecision = p.getSigningDecision();
                
                    if(signingDecision){
                        t.regenMoneyAvailable();
                        if(t.getMoneyAvailable()>=p.getContract().getSalary()){
                            t.getRoster().add(p);
                            t.regenMoneyAvailable();
                            System.out.println(t.getName() + " has RESIGNED " + p.getName() + " for " + p.getContract().getSalary() + "m per year for " + p.getContract().getLength() +
                                    " years!");
                        }else{
                            league.getFreeAgents().add(p);
                            System.out.println(t.getName() + " has released " + p.getName());
                        }
                    }else{
                        league.getFreeAgents().add(p);
                        System.out.println(t.getName() + " has had their offer declined by " + p.getName());
                    }
                }
            }
            
            
            t.getIncomingFreeAgents().clear();
        }
    }
    
    private void setupPlayoffResultsPanel() {
        StringBuilder htmlBuilder = new StringBuilder("<html><style>");
        htmlBuilder.append("table { border-collapse: collapse; width: 100%; }")
                   .append("th, td { border: 1px solid black; padding: 8px; text-align: center; }")
                   .append(".round { font-weight: bold; font-size: 16px; margin-top: 20px; }")
                   .append(".team { padding: 10px; }")
                   .append(".winner { background-color: lightgreen; }")
                   .append("</style><table>");

        int matchIndex = 1;

        for (PlayoffMatchup pm : league.getPlayoffMatchups()) {
            // Determine the round based on the index
            if (matchIndex == 1 || matchIndex == 5 || matchIndex == 7) {
                htmlBuilder.append("<tr><td colspan='2' class='round'>");
                if (matchIndex == 1) {
                    htmlBuilder.append("1st Round");
                } else if (matchIndex == 5) {
                    htmlBuilder.append("2nd Round");
                } else if (matchIndex == 7) {
                    htmlBuilder.append("THE DBA FINALS");
                }
                htmlBuilder.append("</td></tr>");
            }

            // Add matchup details
            String t1Class = pm.getT1Wins() >= 4 ? "team winner" : "team";
            String t2Class = pm.getT2Wins() >= 4 ? "team winner" : "team";

            htmlBuilder.append("<tr>")
                       .append("<td class='").append(t1Class).append("'>")
                       .append(pm.getT1().getName()).append(" (").append(pm.getT1Wins()).append(")")
                       .append("</td>")
                       .append("<td class='").append(t2Class).append("'>")
                       .append(pm.getT2().getName()).append(" (").append(pm.getT2Wins()).append(")")
                       .append("</td>")
                       .append("</tr>");

            matchIndex++;
        }

        htmlBuilder.append("</table></html>");
        jLabel20.setText(htmlBuilder.toString());
    }
    
    private void setupViewRosterPanel(){
        // this will eventually print the overall as well
        try{
            int index = viewRosterPageNumber * 5 + 0;
            Player p = playerTeam.getRoster().get(index);
            jLabel11.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton1.show();
            jButton2.show();
            jButton3.show();
        }catch(Exception e){
            jLabel11.setText("Empty");
            jButton1.hide();
            jButton2.hide();
            jButton3.hide();
        }
        
        try{
            int index = viewRosterPageNumber * 5 + 1;
            Player p = playerTeam.getRoster().get(index);
            jLabel12.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton4.show();
            jButton5.show();
            jButton6.show();
        }catch(Exception e){
            jLabel12.setText("Empty");
            jButton4.hide();
            jButton5.hide();
            jButton6.hide();
        }
        
        try{
            int index = viewRosterPageNumber * 5 + 2;
            Player p = playerTeam.getRoster().get(index);
            jLabel13.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton7.show();
            jButton8.show();
            jButton9.show();
        }catch(Exception e){
            jLabel13.setText("Empty");
            jButton7.hide();
            jButton8.hide();
            jButton9.hide();
        }
        
        try{
            int index = viewRosterPageNumber * 5 + 3;
            Player p = playerTeam.getRoster().get(index);
            jLabel14.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton10.show();
            jButton11.show();
            jButton12.show();
        }catch(Exception e){
            jLabel14.setText("Empty");
            jButton10.hide();
            jButton11.hide();
            jButton12.hide();
        }
        
        try{
            int index = viewRosterPageNumber * 5 + 4;
            Player p = playerTeam.getRoster().get(index);
            jLabel15.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton13.show();
            jButton14.show();
            jButton15.show();
        }catch(Exception e){
            jLabel15.setText("Empty");
            jButton13.hide();
            jButton14.hide();
            jButton15.hide();
        }
        
        
        
        try{
            Player p = playerTeam.getSquad()[0];
            jLabel1.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton20.show();
            jButton21.show();
        }catch(Exception e){
            jLabel1.setText("Empty");
            jButton20.hide();
            jButton21.hide();
        }
        
        try{
            Player p = playerTeam.getSquad()[1];
            jLabel2.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton22.show();
            jButton23.show();
        }catch(Exception e){
            jLabel2.setText("Empty");
            jButton22.hide();
            jButton23.hide();
        }
        
        try{
            Player p = playerTeam.getSquad()[2];
            jLabel3.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton24.show();
            jButton25.show();
        }catch(Exception e){
            jLabel3.setText("Empty");
            jButton24.hide();
            jButton25.hide();
        }
        
        try{
            Player p = playerTeam.getSquad()[3];
            jLabel4.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton26.show();
            jButton27.show();
        }catch(Exception e){
            jLabel4.setText("Empty");
            jButton26.hide();
            jButton27.hide();
        }
        
        try{
            Player p = playerTeam.getSquad()[4];
            jLabel5.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton28.show();
            jButton29.show();
        }catch(Exception e){
            jLabel5.setText("Empty");
            jButton28.hide();
            jButton29.hide();
        }
        
        
        
        try{
            Player p = playerTeam.getBench()[0];
            jLabel6.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton38.show();
            jButton39.show();
        }catch(Exception e){
            jLabel6.setText("Empty");
            jButton38.hide();
            jButton39.hide();
        }
        
        try{
            Player p = playerTeam.getBench()[1];
            jLabel7.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton36.show();
            jButton37.show();
        }catch(Exception e){
            jLabel7.setText("Empty");
            jButton36.hide();
            jButton37.hide();
        }
        
        try{
            Player p = playerTeam.getBench()[2];
            jLabel8.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton34.show();
            jButton35.show();
        }catch(Exception e){
            jLabel8.setText("Empty");
            jButton34.hide();
            jButton35.hide();
        }
        
        try{
            Player p = playerTeam.getBench()[3];
            jLabel9.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton32.show();
            jButton33.show();
        }catch(Exception e){
            jLabel9.setText("Empty");
            jButton32.hide();
            jButton33.hide();
        }
        
        try{
            Player p = playerTeam.getBench()[4];
            jLabel10.setText(p.getName() + " - " + p.getPosition() + " - " + p.getOverallRating());
            jButton30.show();
            jButton31.show();
        }catch(Exception e){
            jLabel10.setText("Empty");
            jButton30.hide();
            jButton31.hide();
        }
    }

    private void setupPlayerDetailsPanel(Player p){
        yearlyStatsPlayer = p;
        
        String text = "<html>"
        + "<table>"
        + "<tr><td>Name</td><td>-</td><td>" + p.getName() + "</td></tr>"
        + "<tr><td>Age</td><td>-</td><td>" + p.getAge() + "</td></tr>"
        + "<tr><td>Position</td><td>-</td><td>" + p.getPosition() + "</td></tr>"
        + "<tr><td>Overall</td><td>-</td><td style='color:" + getColorForRating(p.getOverallRating()) + "'>" + p.getOverallRating() + "</td></tr>"
        + "<tr><td>Development</td><td>-</td><td>" + p.getDevelopment() + "</td></tr>"
        + "<tr><td>Close shooting</td><td>-</td><td style='color:" + getColorForRating(p.getCloseSkill()) + "'>" + p.getCloseSkill() + "</td></tr>"
        + "<tr><td>Mid shooting</td><td>-</td><td style='color:" + getColorForRating(p.getMidShotSkill()) + "'>" + p.getMidShotSkill() + "</td></tr>"
        + "<tr><td>Three shooting</td><td>-</td><td style='color:" + getColorForRating(p.getThreeShotSkill()) + "'>" + p.getThreeShotSkill() + "</td></tr>"
        + "<tr><td>Passing</td><td>-</td><td style='color:" + getColorForRating(p.getPassingSkill()) + "'>" + p.getPassingSkill() + "</td></tr>"
        + "<tr><td>Driving</td><td>-</td><td style='color:" + getColorForRating(p.getDriveSkill()) + "'>" + p.getDriveSkill() + "</td></tr>"
        + "<tr><td>Strength</td><td>-</td><td style='color:" + getColorForRating(p.getStrengthSkill()) + "'>" + p.getStrengthSkill() + "</td></tr>"
        + "<tr><td>Speed</td><td>-</td><td style='color:" + getColorForRating(p.getSpeedSkill()) + "'>" + p.getSpeedSkill() + "</td></tr>"
        + "<tr><td>Dribbling</td><td>-</td><td style='color:" + getColorForRating(p.getDribblingSkill()) + "'>" + p.getDribblingSkill() + "</td></tr>"
        + "<tr><td>Perimeter defense</td><td>-</td><td style='color:" + getColorForRating(p.getPerimeterDefSkill()) + "'>" + p.getPerimeterDefSkill() + "</td></tr>"
        + "<tr><td>Interior defense</td><td>-</td><td style='color:" + getColorForRating(p.getInteriorDefSkill()) + "'>" + p.getInteriorDefSkill() + "</td></tr>"
        + "<tr><td>Defensive rebounding</td><td>-</td><td style='color:" + getColorForRating(p.getDefRebounding()) + "'>" + p.getDefRebounding() + "</td></tr>"
        + "<tr><td>Offensive rebounding</td><td>-</td><td style='color:" + getColorForRating(p.getOffRebounding()) + "'>" + p.getOffRebounding() + "</td></tr>"
        + "<tr><td>Experience</td><td>-</td><td>" + p.getYearsInTheLeague() + "</td></tr>"
        + "<tr><td>Contract</td><td>-</td><td>" + p.getContract().getSalary() + "m/" + p.getContract().getLength() + " years</td></tr>"
        + "</table>"
        + "</html>";

        jLabel16.setText(text);

        
        jLabel42.setIcon(p.getPortrait());
        
        String statsText = p.generateStatline();
        jLabel19.setText(statsText);
    }
    
    private String getColorForRating(int value) {
        if (value >= 90) {
            return "#0a4a01";            // 90+ Dark Green
        } else if (value >= 80) {
            return "green";              // 80-89 Green
        } else if (value >= 70) {
            return "#04acb5";            // 70-79 Blue
        } else if (value >= 60) {
            return "orange";             // 60-69 Orange
        } else if (value >= 50) {
            return "#B8860B";            // 50-59 Yellow
        } else {
            return "red";                // Lower than 50 Red
        }
    }


    
    private void setupStandingsPanel() {
        StringBuilder htmlBuilder = new StringBuilder("<html><table style='border-collapse: collapse;'>");

        int std = 1;
        for(Team t : league.getTeams()){
            System.out.println(std + " - " + t.getName());
            std++;
        }
        
        int place = 1;
        for (Team team : league.getTeams()){
            
            if(team.equals(playerTeam)){
                String rowStyle = team.equals(playerTeam) ? "background-color: yellow;" : "";

                    htmlBuilder.append("<tr style='").append(rowStyle).append("'>")
                   .append("<td style='border: 1px solid black; padding: 5px;'>").append(place).append("</td>")
                   .append("<td style='border: 1px solid black; padding: 5px;'>").append(team.getName()).append("</td>")
                   .append("<td style='border: 1px solid black; padding: 5px;'>Wins: ").append(team.getWins()).append(", Losses: ").append(team.getLosses()).append("</td>")
                   .append("</tr>");
            }else{
                htmlBuilder.append("<tr>")
                .append("<td style='border: 1px solid black; padding: 5px;'>").append(place).append("</td>")
                .append("<td style='border: 1px solid black; padding: 5px;'>").append(team.getName()).append("</td>")
                .append("<td style='border: 1px solid black; padding: 5px;'>Wins: ").append(team.getWins()).append(", Losses: ").append(team.getLosses()).append("</td>")
                .append("</tr>");
            }
            place++;
            if(place==16){
                break;
            }
        }

        htmlBuilder.append("</table></html>");
        jLabel18.setText(htmlBuilder.toString());


        StringBuilder htmlBuilder2 = new StringBuilder("<html><table style='border-collapse: collapse;'>");

        
        place--;
        for (int k=place;k<league.getTeams().size();k++){
            Team team = league.getTeams().get(k);
            if(team.equals(playerTeam)){
                String rowStyle = team.equals(playerTeam) ? "background-color: yellow;" : "";

                    htmlBuilder2.append("<tr style='").append(rowStyle).append("'>")
                   .append("<td style='border: 1px solid black; padding: 5px;'>").append(place+1).append("</td>")
                   .append("<td style='border: 1px solid black; padding: 5px;'>").append(team.getName()).append("</td>")
                   .append("<td style='border: 1px solid black; padding: 5px;'>Wins: ").append(team.getWins()).append(", Losses: ").append(team.getLosses()).append("</td>")
                   .append("</tr>");
            }else{
                htmlBuilder2.append("<tr>")
                .append("<td style='border: 1px solid black; padding: 5px;'>").append(place+1).append("</td>")
                .append("<td style='border: 1px solid black; padding: 5px;'>").append(team.getName()).append("</td>")
                .append("<td style='border: 1px solid black; padding: 5px;'>Wins: ").append(team.getWins()).append(", Losses: ").append(team.getLosses()).append("</td>")
                .append("</tr>");
            }
            place++;
        }

        htmlBuilder2.append("</table></html>");
        jLabel43.setText(htmlBuilder2.toString());
        
    }



    
    private void setupDraftPanel(){
        
        if(isUserPickingInDraft){
            jLabel30.setText("MAKE YOUR DRAFT PICK NOW!");
        }else{
            jLabel30.setText("-");
        }
        
        try{
            Player p = league.getDraftees().get(viewDraftPageNumber*3+0);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - DEV: " + p.getDevelopment();
            jLabel27.setText(text);
            jButton63.show();
            jButton67.show();
        }catch(Exception e){
            jLabel27.setText("-");
            jButton63.hide();
            jButton67.hide();
        }
        
        try{
            Player p = league.getDraftees().get(viewDraftPageNumber*3+1);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - DEV: " + p.getDevelopment();
            jLabel28.setText(text);
            jButton65.show();
            jButton68.show();
        }catch(Exception e){
            jLabel28.setText("-");
            jButton65.hide();
            jButton68.hide();
        }
        
        try{
            Player p = league.getDraftees().get(viewDraftPageNumber*3+2);
            String text = p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + " - DEV: " + p.getDevelopment();
            jLabel29.setText(text);
            jButton66.show();
            jButton69.show();
        }catch(Exception e){
            jLabel29.setText("-");
            jButton66.hide();
            jButton69.hide();
        }
    }
    
    private void setupDraftSummaryPanel(){
        
        String text = "<html>";
        
        for(DraftPick dp : draftPicks){
            Player p = dp.getPlayer();
            text+= dp.getTeam().getName() + " - " + p.getName() + " - AGE: " + p.getAge() + " - POS: " + p.getPosition() + " - OVR: " + p.getOverallRating() + "<br>";
        }
        
        text+= "</html>";
        
        jLabel31.setText(text);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel draftPanel;
    private javax.swing.JPanel draftSummaryPanel;
    private javax.swing.JPanel drillSelectorPanel;
    private javax.swing.JPanel freeAgencyPanel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton100;
    private javax.swing.JButton jButton101;
    private javax.swing.JButton jButton102;
    private javax.swing.JButton jButton103;
    private javax.swing.JButton jButton104;
    private javax.swing.JButton jButton105;
    private javax.swing.JButton jButton106;
    private javax.swing.JButton jButton107;
    private javax.swing.JButton jButton108;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton65;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JButton jButton72;
    private javax.swing.JButton jButton73;
    private javax.swing.JButton jButton74;
    private javax.swing.JButton jButton75;
    private javax.swing.JButton jButton76;
    private javax.swing.JButton jButton77;
    private javax.swing.JButton jButton78;
    private javax.swing.JButton jButton79;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton80;
    private javax.swing.JButton jButton81;
    private javax.swing.JButton jButton83;
    private javax.swing.JButton jButton84;
    private javax.swing.JButton jButton85;
    private javax.swing.JButton jButton86;
    private javax.swing.JButton jButton87;
    private javax.swing.JButton jButton88;
    private javax.swing.JButton jButton89;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton90;
    private javax.swing.JButton jButton91;
    private javax.swing.JButton jButton92;
    private javax.swing.JButton jButton93;
    private javax.swing.JButton jButton94;
    private javax.swing.JButton jButton95;
    private javax.swing.JButton jButton96;
    private javax.swing.JButton jButton97;
    private javax.swing.JButton jButton98;
    private javax.swing.JButton jButton99;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel playerDetailsPanel;
    private javax.swing.JPanel playoffResultsPanel;
    private javax.swing.JPanel resignPlayersPanel;
    private javax.swing.JPanel seasonStandingsPanel;
    private javax.swing.JPanel trainingPanel;
    private javax.swing.JPanel trainingResultsPanel;
    private javax.swing.JPanel viewEntireRosterPanel;
    private javax.swing.JPanel viewPlayersPanel;
    private javax.swing.JPanel yearlyStatsPanel;
    // End of variables declaration//GEN-END:variables
}
